-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--E1_internal_select[0] is sequencer:inst5|internal_select[0]
--operation mode is normal

E1_internal_select[0]_lut_out = E1_internal_select[0] $ B1_slow_clk;
E1_internal_select[0] = DFFEAS(E1_internal_select[0]_lut_out, 50MHz, VCC, , , , , , );


--E1_internal_select[1] is sequencer:inst5|internal_select[1]
--operation mode is normal

E1_internal_select[1]_lut_out = E1_internal_select[1] $ (E1_internal_select[0] & B1_slow_clk);
E1_internal_select[1] = DFFEAS(E1_internal_select[1]_lut_out, 50MHz, VCC, , , , , , );


--A1L25 is rtl~139
--operation mode is normal

A1L25 = E1_internal_select[0] & (!E1_internal_select[1]);


--A1L22 is rtl~1
--operation mode is normal

A1L22 = E1_internal_select[1] # E1_internal_select[0];


--A1L23 is rtl~2
--operation mode is normal

A1L23 = E1_internal_select[1] & (!E1_internal_select[0]);


--C1L1 is calculate_sum:inst3|add~678
--operation mode is normal

C1L1 = !E1_internal_select[1] & (E1_internal_select[0] & DIPSWITCH[4] # !E1_internal_select[0] & (DIPSWITCH[0]));


--C1L2 is calculate_sum:inst3|add~679
--operation mode is arithmetic

C1L2_carry_eqn = C1L18;
C1L2 = C1L16 $ DIPSWITCH[0] $ !C1L2_carry_eqn;

--C1L3 is calculate_sum:inst3|add~681
--operation mode is arithmetic

C1L3 = CARRY(C1L16 & (!C1L18 # !DIPSWITCH[0]) # !C1L16 & !DIPSWITCH[0] & !C1L18);


--C1L4 is calculate_sum:inst3|add~684
--operation mode is normal

C1L4 = C1L1 # C1L2 & E1_internal_select[1];


--C1L5 is calculate_sum:inst3|add~685
--operation mode is normal

C1L5 = !E1_internal_select[1] & (E1_internal_select[0] & DIPSWITCH[5] # !E1_internal_select[0] & (DIPSWITCH[1]));


--C1L6 is calculate_sum:inst3|add~686
--operation mode is arithmetic

C1L6_carry_eqn = C1L3;
C1L6 = C1L19 $ DIPSWITCH[1] $ C1L6_carry_eqn;

--C1L7 is calculate_sum:inst3|add~688
--operation mode is arithmetic

C1L7 = CARRY(C1L19 & DIPSWITCH[1] & !C1L3 # !C1L19 & (DIPSWITCH[1] # !C1L3));


--C1L8 is calculate_sum:inst3|add~691
--operation mode is normal

C1L8 = C1L5 # C1L6 & E1_internal_select[1];


--C1L9 is calculate_sum:inst3|add~692
--operation mode is normal

C1L9 = !E1_internal_select[1] & (E1_internal_select[0] & DIPSWITCH[6] # !E1_internal_select[0] & (DIPSWITCH[2]));


--C1L10 is calculate_sum:inst3|add~693
--operation mode is arithmetic

C1L10_carry_eqn = C1L7;
C1L10 = C1L20 $ DIPSWITCH[2] $ !C1L10_carry_eqn;

--C1L11 is calculate_sum:inst3|add~695
--operation mode is arithmetic

C1L11 = CARRY(C1L20 & (!C1L7 # !DIPSWITCH[2]) # !C1L20 & !DIPSWITCH[2] & !C1L7);


--C1L12 is calculate_sum:inst3|add~698
--operation mode is normal

C1L12 = C1L9 # C1L10 & E1_internal_select[1];


--C1L13 is calculate_sum:inst3|add~699
--operation mode is normal

C1L13 = !E1_internal_select[1] & (E1_internal_select[0] & DIPSWITCH[7] # !E1_internal_select[0] & (DIPSWITCH[3]));


--C1L14 is calculate_sum:inst3|add~700
--operation mode is normal

C1L14_carry_eqn = C1L11;
C1L14 = C1L21 $ DIPSWITCH[3] $ C1L14_carry_eqn;


--C1L15 is calculate_sum:inst3|add~705
--operation mode is normal

C1L15 = C1L13 # C1L14 & E1_internal_select[1];


--D1L7 is to_seven_segment:inst4|segments_out[6]~191
--operation mode is normal

D1L7 = C1L12 & !C1L8 & (C1L4 $ !C1L15) # !C1L12 & C1L4 & (C1L8 $ !C1L15);


--D1L6 is to_seven_segment:inst4|segments_out[5]~192
--operation mode is normal

D1L6 = C1L8 & (C1L4 & (C1L15) # !C1L4 & C1L12) # !C1L8 & C1L12 & (C1L4 $ C1L15);


--D1L5 is to_seven_segment:inst4|segments_out[4]~193
--operation mode is normal

D1L5 = C1L12 & C1L15 & (C1L8 # !C1L4) # !C1L12 & !C1L4 & C1L8 & !C1L15;


--D1L4 is to_seven_segment:inst4|segments_out[3]~194
--operation mode is normal

D1L4 = C1L8 & (C1L4 & C1L12 # !C1L4 & !C1L12 & C1L15) # !C1L8 & !C1L15 & (C1L4 $ C1L12);


--D1L3 is to_seven_segment:inst4|segments_out[2]~195
--operation mode is normal

D1L3 = C1L8 & C1L4 & (!C1L15) # !C1L8 & (C1L12 & (!C1L15) # !C1L12 & C1L4);


--D1L2 is to_seven_segment:inst4|segments_out[1]~196
--operation mode is normal

D1L2 = C1L4 & (C1L15 $ (C1L8 # !C1L12)) # !C1L4 & C1L8 & !C1L12 & !C1L15;


--D1L1 is to_seven_segment:inst4|segments_out[0]~197
--operation mode is normal

D1L1 = C1L4 & (C1L15 # C1L8 $ C1L12) # !C1L4 & (C1L8 # C1L12 $ C1L15);


--A1L24 is rtl~3
--operation mode is normal

A1L24 = E1_internal_select[1] & E1_internal_select[0];


--B1_slow_clk is pulse_generator:inst|slow_clk
--operation mode is normal

B1_slow_clk_lut_out = A1L30;
B1_slow_clk = DFFEAS(B1_slow_clk_lut_out, 50MHz, VCC, , , , , , );


--C1L16 is calculate_sum:inst3|add~706
--operation mode is normal

C1L16 = DIPSWITCH[4] $ (!E1_internal_select[0] & (E1_internal_select[1]));


--C1L18 is calculate_sum:inst3|add~709
--operation mode is arithmetic

C1L18 = CARRY(E1_internal_select[0] # !E1_internal_select[1]);


--C1L19 is calculate_sum:inst3|add~712
--operation mode is normal

C1L19 = DIPSWITCH[5] $ (!E1_internal_select[0] & (E1_internal_select[1]));


--C1L20 is calculate_sum:inst3|add~713
--operation mode is normal

C1L20 = DIPSWITCH[6] $ (!E1_internal_select[0] & (E1_internal_select[1]));


--C1L21 is calculate_sum:inst3|add~714
--operation mode is normal

C1L21 = DIPSWITCH[7] $ (!E1_internal_select[0] & (E1_internal_select[1]));


--B1_counter[15] is pulse_generator:inst|counter[15]
--operation mode is normal

B1_counter[15]_lut_out = B1L1 & (!A1L30);
B1_counter[15] = DFFEAS(B1_counter[15]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[14] is pulse_generator:inst|counter[14]
--operation mode is normal

B1_counter[14]_lut_out = B1L2 & (!A1L30);
B1_counter[14] = DFFEAS(B1_counter[14]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[13] is pulse_generator:inst|counter[13]
--operation mode is normal

B1_counter[13]_lut_out = B1L4;
B1_counter[13] = DFFEAS(B1_counter[13]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[12] is pulse_generator:inst|counter[12]
--operation mode is normal

B1_counter[12]_lut_out = B1L6;
B1_counter[12] = DFFEAS(B1_counter[12]_lut_out, 50MHz, VCC, , , , , , );


--A1L26 is rtl~140
--operation mode is normal

A1L26 = B1_counter[15] & B1_counter[14] & !B1_counter[13] & !B1_counter[12];


--B1_counter[9] is pulse_generator:inst|counter[9]
--operation mode is normal

B1_counter[9]_lut_out = B1L8 & (!A1L30);
B1_counter[9] = DFFEAS(B1_counter[9]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[8] is pulse_generator:inst|counter[8]
--operation mode is normal

B1_counter[8]_lut_out = B1L10 & (!A1L30);
B1_counter[8] = DFFEAS(B1_counter[8]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[11] is pulse_generator:inst|counter[11]
--operation mode is normal

B1_counter[11]_lut_out = B1L12;
B1_counter[11] = DFFEAS(B1_counter[11]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[10] is pulse_generator:inst|counter[10]
--operation mode is normal

B1_counter[10]_lut_out = B1L14;
B1_counter[10] = DFFEAS(B1_counter[10]_lut_out, 50MHz, VCC, , , , , , );


--A1L27 is rtl~141
--operation mode is normal

A1L27 = B1_counter[9] & B1_counter[8] & !B1_counter[11] & !B1_counter[10];


--B1_counter[6] is pulse_generator:inst|counter[6]
--operation mode is normal

B1_counter[6]_lut_out = B1L16 & (!A1L30);
B1_counter[6] = DFFEAS(B1_counter[6]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[7] is pulse_generator:inst|counter[7]
--operation mode is normal

B1_counter[7]_lut_out = B1L18;
B1_counter[7] = DFFEAS(B1_counter[7]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[5] is pulse_generator:inst|counter[5]
--operation mode is normal

B1_counter[5]_lut_out = B1L20;
B1_counter[5] = DFFEAS(B1_counter[5]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[4] is pulse_generator:inst|counter[4]
--operation mode is normal

B1_counter[4]_lut_out = B1L22 & (!A1L30);
B1_counter[4] = DFFEAS(B1_counter[4]_lut_out, 50MHz, VCC, , , , , , );


--A1L28 is rtl~142
--operation mode is normal

A1L28 = B1_counter[6] & !B1_counter[7] & !B1_counter[5] & !B1_counter[4];


--B1_counter[3] is pulse_generator:inst|counter[3]
--operation mode is normal

B1_counter[3]_lut_out = B1L24;
B1_counter[3] = DFFEAS(B1_counter[3]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[2] is pulse_generator:inst|counter[2]
--operation mode is normal

B1_counter[2]_lut_out = B1L26;
B1_counter[2] = DFFEAS(B1_counter[2]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[1] is pulse_generator:inst|counter[1]
--operation mode is normal

B1_counter[1]_lut_out = B1L28;
B1_counter[1] = DFFEAS(B1_counter[1]_lut_out, 50MHz, VCC, , , , , , );


--B1_counter[0] is pulse_generator:inst|counter[0]
--operation mode is normal

B1_counter[0]_lut_out = B1L30;
B1_counter[0] = DFFEAS(B1_counter[0]_lut_out, 50MHz, VCC, , , , , , );


--A1L29 is rtl~143
--operation mode is normal

A1L29 = B1_counter[3] & B1_counter[2] & B1_counter[1] & B1_counter[0];


--A1L30 is rtl~144
--operation mode is normal

A1L30 = A1L26 & A1L27 & A1L28 & A1L29;


--B1L1 is pulse_generator:inst|add~241
--operation mode is normal

B1L1_carry_eqn = B1L3;
B1L1 = B1_counter[15] $ (B1L1_carry_eqn);


--B1L2 is pulse_generator:inst|add~246
--operation mode is arithmetic

B1L2_carry_eqn = B1L5;
B1L2 = B1_counter[14] $ (!B1L2_carry_eqn);

--B1L3 is pulse_generator:inst|add~248
--operation mode is arithmetic

B1L3 = CARRY(B1_counter[14] & (!B1L5));


--B1L4 is pulse_generator:inst|add~251
--operation mode is arithmetic

B1L4_carry_eqn = B1L7;
B1L4 = B1_counter[13] $ (B1L4_carry_eqn);

--B1L5 is pulse_generator:inst|add~253
--operation mode is arithmetic

B1L5 = CARRY(!B1L7 # !B1_counter[13]);


--B1L6 is pulse_generator:inst|add~256
--operation mode is arithmetic

B1L6_carry_eqn = B1L13;
B1L6 = B1_counter[12] $ (!B1L6_carry_eqn);

--B1L7 is pulse_generator:inst|add~258
--operation mode is arithmetic

B1L7 = CARRY(B1_counter[12] & (!B1L13));


--B1L8 is pulse_generator:inst|add~261
--operation mode is arithmetic

B1L8_carry_eqn = B1L11;
B1L8 = B1_counter[9] $ (B1L8_carry_eqn);

--B1L9 is pulse_generator:inst|add~263
--operation mode is arithmetic

B1L9 = CARRY(!B1L11 # !B1_counter[9]);


--B1L10 is pulse_generator:inst|add~266
--operation mode is arithmetic

B1L10_carry_eqn = B1L19;
B1L10 = B1_counter[8] $ (!B1L10_carry_eqn);

--B1L11 is pulse_generator:inst|add~268
--operation mode is arithmetic

B1L11 = CARRY(B1_counter[8] & (!B1L19));


--B1L12 is pulse_generator:inst|add~271
--operation mode is arithmetic

B1L12_carry_eqn = B1L15;
B1L12 = B1_counter[11] $ (B1L12_carry_eqn);

--B1L13 is pulse_generator:inst|add~273
--operation mode is arithmetic

B1L13 = CARRY(!B1L15 # !B1_counter[11]);


--B1L14 is pulse_generator:inst|add~276
--operation mode is arithmetic

B1L14_carry_eqn = B1L9;
B1L14 = B1_counter[10] $ (!B1L14_carry_eqn);

--B1L15 is pulse_generator:inst|add~278
--operation mode is arithmetic

B1L15 = CARRY(B1_counter[10] & (!B1L9));


--B1L16 is pulse_generator:inst|add~281
--operation mode is arithmetic

B1L16_carry_eqn = B1L21;
B1L16 = B1_counter[6] $ (!B1L16_carry_eqn);

--B1L17 is pulse_generator:inst|add~283
--operation mode is arithmetic

B1L17 = CARRY(B1_counter[6] & (!B1L21));


--B1L18 is pulse_generator:inst|add~286
--operation mode is arithmetic

B1L18_carry_eqn = B1L17;
B1L18 = B1_counter[7] $ (B1L18_carry_eqn);

--B1L19 is pulse_generator:inst|add~288
--operation mode is arithmetic

B1L19 = CARRY(!B1L17 # !B1_counter[7]);


--B1L20 is pulse_generator:inst|add~291
--operation mode is arithmetic

B1L20_carry_eqn = B1L23;
B1L20 = B1_counter[5] $ (B1L20_carry_eqn);

--B1L21 is pulse_generator:inst|add~293
--operation mode is arithmetic

B1L21 = CARRY(!B1L23 # !B1_counter[5]);


--B1L22 is pulse_generator:inst|add~296
--operation mode is arithmetic

B1L22_carry_eqn = B1L25;
B1L22 = B1_counter[4] $ (!B1L22_carry_eqn);

--B1L23 is pulse_generator:inst|add~298
--operation mode is arithmetic

B1L23 = CARRY(B1_counter[4] & (!B1L25));


--B1L24 is pulse_generator:inst|add~301
--operation mode is arithmetic

B1L24_carry_eqn = B1L27;
B1L24 = B1_counter[3] $ (B1L24_carry_eqn);

--B1L25 is pulse_generator:inst|add~303
--operation mode is arithmetic

B1L25 = CARRY(!B1L27 # !B1_counter[3]);


--B1L26 is pulse_generator:inst|add~306
--operation mode is arithmetic

B1L26_carry_eqn = B1L29;
B1L26 = B1_counter[2] $ (!B1L26_carry_eqn);

--B1L27 is pulse_generator:inst|add~308
--operation mode is arithmetic

B1L27 = CARRY(B1_counter[2] & (!B1L29));


--B1L28 is pulse_generator:inst|add~311
--operation mode is arithmetic

B1L28_carry_eqn = B1L31;
B1L28 = B1_counter[1] $ (B1L28_carry_eqn);

--B1L29 is pulse_generator:inst|add~313
--operation mode is arithmetic

B1L29 = CARRY(!B1L31 # !B1_counter[1]);


--B1L30 is pulse_generator:inst|add~316
--operation mode is arithmetic

B1L30 = !B1_counter[0];

--B1L31 is pulse_generator:inst|add~318
--operation mode is arithmetic

B1L31 = CARRY(B1_counter[0]);


--DIPSWITCH[4] is DIPSWITCH[4]
--operation mode is input

DIPSWITCH[4] = INPUT();


--DIPSWITCH[0] is DIPSWITCH[0]
--operation mode is input

DIPSWITCH[0] = INPUT();


--DIPSWITCH[5] is DIPSWITCH[5]
--operation mode is input

DIPSWITCH[5] = INPUT();


--DIPSWITCH[1] is DIPSWITCH[1]
--operation mode is input

DIPSWITCH[1] = INPUT();


--DIPSWITCH[6] is DIPSWITCH[6]
--operation mode is input

DIPSWITCH[6] = INPUT();


--DIPSWITCH[2] is DIPSWITCH[2]
--operation mode is input

DIPSWITCH[2] = INPUT();


--DIPSWITCH[7] is DIPSWITCH[7]
--operation mode is input

DIPSWITCH[7] = INPUT();


--DIPSWITCH[3] is DIPSWITCH[3]
--operation mode is input

DIPSWITCH[3] = INPUT();


--50MHz is 50MHz
--operation mode is input

50MHz = INPUT();


--DIG_2 is DIG_2
--operation mode is output

DIG_2 = OUTPUT(A1L25);


--DIG_1 is DIG_1
--operation mode is output

DIG_1 = OUTPUT(!A1L22);


--DIG_3 is DIG_3
--operation mode is output

DIG_3 = OUTPUT(A1L23);


--DIG_A is DIG_A
--operation mode is output

DIG_A = OUTPUT(!D1L7);


--DIG_B is DIG_B
--operation mode is output

DIG_B = OUTPUT(!D1L6);


--DIG_C is DIG_C
--operation mode is output

DIG_C = OUTPUT(!D1L5);


--DIG_D is DIG_D
--operation mode is output

DIG_D = OUTPUT(!D1L4);


--DIG_E is DIG_E
--operation mode is output

DIG_E = OUTPUT(!D1L3);


--DIG_F is DIG_F
--operation mode is output

DIG_F = OUTPUT(!D1L2);


--DIG_G is DIG_G
--operation mode is output

DIG_G = OUTPUT(D1L1);


--DIG_4 is DIG_4
--operation mode is output

DIG_4 = OUTPUT(A1L24);


