-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 5.1 (Build Build 176 10/26/2005)
-- Created on Wed Jan 25 23:07:37 2006

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;

--  Entity Declaration

ENTITY sequencer IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		clk : IN STD_LOGIC;
		clk_en : IN STD_LOGIC;
		digit1 : OUT STD_LOGIC;
		digit2 : OUT STD_LOGIC;
		digit3 : OUT STD_LOGIC;
		digit4 : OUT STD_LOGIC;
		sel : OUT STD_LOGIC_VECTOR(1 downto 0)
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END sequencer;


--  Architecture Body

ARCHITECTURE sequencer_architecture OF sequencer IS

signal internal_select : unsigned (1 downto 0);	-- with only 2 bits, we can store 4 different values (3,2,1 and 0)
	
BEGIN

  count : process (clk,clk_en)
  begin
    if (clk'event and clk='1' and clk_en='1') then
      if (internal_select=3) then
        internal_select<= TO_UNSIGNED(0,2); -- TO_UNSIGNED coverts the type natural ('0') to an unsigned 
											-- representation with 2 bits (this is defined by the ,2 - part.
      else
	    internal_select <= internal_select+1;
	  end if; -- internal_select = 3
    end if; -- positive edge slow_clk
  end process;

digit1 <= '1' when (internal_select=0) else '0';
digit2 <= '1' when (internal_select=1) else '0';
digit3 <= '1' when (internal_select=2) else '0';
digit4 <= '1' when (internal_select=3) else '0';


sel <= std_logic_vector (internal_select);

END sequencer_architecture;
