                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.5.0 #1020 (May  8 2005)
                              4 ; This file generated Wed Jul 19 05:32:07 2006
                              5 ;--------------------------------------------------------
                              6 	.module ex14
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _TF2
                             14 	.globl _EXF2
                             15 	.globl _RCLK
                             16 	.globl _TCLK
                             17 	.globl _EXEN2
                             18 	.globl _TR2
                             19 	.globl _C_T2
                             20 	.globl _CP_RL2
                             21 	.globl _T2CON_7
                             22 	.globl _T2CON_6
                             23 	.globl _T2CON_5
                             24 	.globl _T2CON_4
                             25 	.globl _T2CON_3
                             26 	.globl _T2CON_2
                             27 	.globl _T2CON_1
                             28 	.globl _T2CON_0
                             29 	.globl _ET2
                             30 	.globl _CY
                             31 	.globl _AC
                             32 	.globl _F0
                             33 	.globl _RS1
                             34 	.globl _RS0
                             35 	.globl _OV
                             36 	.globl _F1
                             37 	.globl _P
                             38 	.globl _PS
                             39 	.globl _PT1
                             40 	.globl _PX1
                             41 	.globl _PT0
                             42 	.globl _PX0
                             43 	.globl _RD
                             44 	.globl _WR
                             45 	.globl _T1
                             46 	.globl _T0
                             47 	.globl _INT1
                             48 	.globl _INT0
                             49 	.globl _TXD
                             50 	.globl _RXD
                             51 	.globl _P3_7
                             52 	.globl _P3_6
                             53 	.globl _P3_5
                             54 	.globl _P3_4
                             55 	.globl _P3_3
                             56 	.globl _P3_2
                             57 	.globl _P3_1
                             58 	.globl _P3_0
                             59 	.globl _EA
                             60 	.globl _ES
                             61 	.globl _ET1
                             62 	.globl _EX1
                             63 	.globl _ET0
                             64 	.globl _EX0
                             65 	.globl _P2_7
                             66 	.globl _P2_6
                             67 	.globl _P2_5
                             68 	.globl _P2_4
                             69 	.globl _P2_3
                             70 	.globl _P2_2
                             71 	.globl _P2_1
                             72 	.globl _P2_0
                             73 	.globl _SM0
                             74 	.globl _SM1
                             75 	.globl _SM2
                             76 	.globl _REN
                             77 	.globl _TB8
                             78 	.globl _RB8
                             79 	.globl _TI
                             80 	.globl _RI
                             81 	.globl _P1_7
                             82 	.globl _P1_6
                             83 	.globl _P1_5
                             84 	.globl _P1_4
                             85 	.globl _P1_3
                             86 	.globl _P1_2
                             87 	.globl _P1_1
                             88 	.globl _P1_0
                             89 	.globl _TF1
                             90 	.globl _TR1
                             91 	.globl _TF0
                             92 	.globl _TR0
                             93 	.globl _IE1
                             94 	.globl _IT1
                             95 	.globl _IE0
                             96 	.globl _IT0
                             97 	.globl _P0_7
                             98 	.globl _P0_6
                             99 	.globl _P0_5
                            100 	.globl _P0_4
                            101 	.globl _P0_3
                            102 	.globl _P0_2
                            103 	.globl _P0_1
                            104 	.globl _P0_0
                            105 	.globl _TH2
                            106 	.globl _TL2
                            107 	.globl _RCAP2H
                            108 	.globl _RCAP2L
                            109 	.globl _T2CON
                            110 	.globl _B
                            111 	.globl _ACC
                            112 	.globl _PSW
                            113 	.globl _IP
                            114 	.globl _P3
                            115 	.globl _IE
                            116 	.globl _P2
                            117 	.globl _SBUF
                            118 	.globl _SCON
                            119 	.globl _P1
                            120 	.globl _TH1
                            121 	.globl _TH0
                            122 	.globl _TL1
                            123 	.globl _TL0
                            124 	.globl _TMOD
                            125 	.globl _TCON
                            126 	.globl _PCON
                            127 	.globl _DPH
                            128 	.globl _DPL
                            129 	.globl _SP
                            130 	.globl _P0
                            131 ;--------------------------------------------------------
                            132 ; special function registers
                            133 ;--------------------------------------------------------
                            134 	.area RSEG    (DATA)
                    0080    135 _P0	=	0x0080
                    0081    136 _SP	=	0x0081
                    0082    137 _DPL	=	0x0082
                    0083    138 _DPH	=	0x0083
                    0087    139 _PCON	=	0x0087
                    0088    140 _TCON	=	0x0088
                    0089    141 _TMOD	=	0x0089
                    008A    142 _TL0	=	0x008a
                    008B    143 _TL1	=	0x008b
                    008C    144 _TH0	=	0x008c
                    008D    145 _TH1	=	0x008d
                    0090    146 _P1	=	0x0090
                    0098    147 _SCON	=	0x0098
                    0099    148 _SBUF	=	0x0099
                    00A0    149 _P2	=	0x00a0
                    00A8    150 _IE	=	0x00a8
                    00B0    151 _P3	=	0x00b0
                    00B8    152 _IP	=	0x00b8
                    00D0    153 _PSW	=	0x00d0
                    00E0    154 _ACC	=	0x00e0
                    00F0    155 _B	=	0x00f0
                    00C8    156 _T2CON	=	0x00c8
                    00CA    157 _RCAP2L	=	0x00ca
                    00CB    158 _RCAP2H	=	0x00cb
                    00CC    159 _TL2	=	0x00cc
                    00CD    160 _TH2	=	0x00cd
                            161 ;--------------------------------------------------------
                            162 ; special function bits 
                            163 ;--------------------------------------------------------
                            164 	.area RSEG    (DATA)
                    0080    165 _P0_0	=	0x0080
                    0081    166 _P0_1	=	0x0081
                    0082    167 _P0_2	=	0x0082
                    0083    168 _P0_3	=	0x0083
                    0084    169 _P0_4	=	0x0084
                    0085    170 _P0_5	=	0x0085
                    0086    171 _P0_6	=	0x0086
                    0087    172 _P0_7	=	0x0087
                    0088    173 _IT0	=	0x0088
                    0089    174 _IE0	=	0x0089
                    008A    175 _IT1	=	0x008a
                    008B    176 _IE1	=	0x008b
                    008C    177 _TR0	=	0x008c
                    008D    178 _TF0	=	0x008d
                    008E    179 _TR1	=	0x008e
                    008F    180 _TF1	=	0x008f
                    0090    181 _P1_0	=	0x0090
                    0091    182 _P1_1	=	0x0091
                    0092    183 _P1_2	=	0x0092
                    0093    184 _P1_3	=	0x0093
                    0094    185 _P1_4	=	0x0094
                    0095    186 _P1_5	=	0x0095
                    0096    187 _P1_6	=	0x0096
                    0097    188 _P1_7	=	0x0097
                    0098    189 _RI	=	0x0098
                    0099    190 _TI	=	0x0099
                    009A    191 _RB8	=	0x009a
                    009B    192 _TB8	=	0x009b
                    009C    193 _REN	=	0x009c
                    009D    194 _SM2	=	0x009d
                    009E    195 _SM1	=	0x009e
                    009F    196 _SM0	=	0x009f
                    00A0    197 _P2_0	=	0x00a0
                    00A1    198 _P2_1	=	0x00a1
                    00A2    199 _P2_2	=	0x00a2
                    00A3    200 _P2_3	=	0x00a3
                    00A4    201 _P2_4	=	0x00a4
                    00A5    202 _P2_5	=	0x00a5
                    00A6    203 _P2_6	=	0x00a6
                    00A7    204 _P2_7	=	0x00a7
                    00A8    205 _EX0	=	0x00a8
                    00A9    206 _ET0	=	0x00a9
                    00AA    207 _EX1	=	0x00aa
                    00AB    208 _ET1	=	0x00ab
                    00AC    209 _ES	=	0x00ac
                    00AF    210 _EA	=	0x00af
                    00B0    211 _P3_0	=	0x00b0
                    00B1    212 _P3_1	=	0x00b1
                    00B2    213 _P3_2	=	0x00b2
                    00B3    214 _P3_3	=	0x00b3
                    00B4    215 _P3_4	=	0x00b4
                    00B5    216 _P3_5	=	0x00b5
                    00B6    217 _P3_6	=	0x00b6
                    00B7    218 _P3_7	=	0x00b7
                    00B0    219 _RXD	=	0x00b0
                    00B1    220 _TXD	=	0x00b1
                    00B2    221 _INT0	=	0x00b2
                    00B3    222 _INT1	=	0x00b3
                    00B4    223 _T0	=	0x00b4
                    00B5    224 _T1	=	0x00b5
                    00B6    225 _WR	=	0x00b6
                    00B7    226 _RD	=	0x00b7
                    00B8    227 _PX0	=	0x00b8
                    00B9    228 _PT0	=	0x00b9
                    00BA    229 _PX1	=	0x00ba
                    00BB    230 _PT1	=	0x00bb
                    00BC    231 _PS	=	0x00bc
                    00D0    232 _P	=	0x00d0
                    00D1    233 _F1	=	0x00d1
                    00D2    234 _OV	=	0x00d2
                    00D3    235 _RS0	=	0x00d3
                    00D4    236 _RS1	=	0x00d4
                    00D5    237 _F0	=	0x00d5
                    00D6    238 _AC	=	0x00d6
                    00D7    239 _CY	=	0x00d7
                    00AD    240 _ET2	=	0x00ad
                    00C8    241 _T2CON_0	=	0x00c8
                    00C9    242 _T2CON_1	=	0x00c9
                    00CA    243 _T2CON_2	=	0x00ca
                    00CB    244 _T2CON_3	=	0x00cb
                    00CC    245 _T2CON_4	=	0x00cc
                    00CD    246 _T2CON_5	=	0x00cd
                    00CE    247 _T2CON_6	=	0x00ce
                    00CF    248 _T2CON_7	=	0x00cf
                    00C8    249 _CP_RL2	=	0x00c8
                    00C9    250 _C_T2	=	0x00c9
                    00CA    251 _TR2	=	0x00ca
                    00CB    252 _EXEN2	=	0x00cb
                    00CC    253 _TCLK	=	0x00cc
                    00CD    254 _RCLK	=	0x00cd
                    00CE    255 _EXF2	=	0x00ce
                    00CF    256 _TF2	=	0x00cf
                            257 ;--------------------------------------------------------
                            258 ; overlayable register banks 
                            259 ;--------------------------------------------------------
                            260 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     261 	.ds 8
                            262 ;--------------------------------------------------------
                            263 ; internal ram data
                            264 ;--------------------------------------------------------
                            265 	.area DSEG    (DATA)
                            266 ;--------------------------------------------------------
                            267 ; overlayable items in internal ram 
                            268 ;--------------------------------------------------------
                            269 	.area	OSEG    (OVR,DATA)
   0000                     270 _main_p_1_1::
   0000                     271 	.ds 2
   0002                     272 _main_q_1_1::
   0002                     273 	.ds 2
                            274 ;--------------------------------------------------------
                            275 ; Stack segment in internal ram 
                            276 ;--------------------------------------------------------
                            277 	.area	SSEG	(DATA)
   0000                     278 __start__stack:
   0000                     279 	.ds	1
                            280 
                            281 ;--------------------------------------------------------
                            282 ; indirectly addressable internal ram data
                            283 ;--------------------------------------------------------
                            284 	.area ISEG    (DATA)
                            285 ;--------------------------------------------------------
                            286 ; bit data
                            287 ;--------------------------------------------------------
                            288 	.area BSEG    (BIT)
                            289 ;--------------------------------------------------------
                            290 ; paged external ram data
                            291 ;--------------------------------------------------------
                            292 	.area PSEG    (PAG,XDATA)
                            293 ;--------------------------------------------------------
                            294 ; external ram data
                            295 ;--------------------------------------------------------
                            296 	.area XSEG    (XDATA)
   0000                     297 _main_buffer_1_1::
   0000                     298 	.ds 128
                    0500    299 _main_test_1_1	=	0x0500
                            300 ;--------------------------------------------------------
                            301 ; external initialized ram data
                            302 ;--------------------------------------------------------
                            303 	.area XISEG   (XDATA)
                            304 	.area CSEG    (CODE)
                            305 	.area GSINIT0 (CODE)
                            306 	.area GSINIT1 (CODE)
                            307 	.area GSINIT2 (CODE)
                            308 	.area GSINIT3 (CODE)
                            309 	.area GSINIT4 (CODE)
                            310 	.area GSINIT5 (CODE)
                            311 ;--------------------------------------------------------
                            312 ; interrupt vector 
                            313 ;--------------------------------------------------------
                            314 	.area CSEG    (CODE)
   0000                     315 __interrupt_vect:
   0000 02s00r00            316 	ljmp	__sdcc_gsinit_startup
                            317 ;--------------------------------------------------------
                            318 ; global & static initialisations
                            319 ;--------------------------------------------------------
                            320 	.area CSEG    (CODE)
                            321 	.area GSINIT  (CODE)
                            322 	.area GSFINAL (CODE)
                            323 	.area GSINIT  (CODE)
                            324 	.globl __sdcc_gsinit_startup
                            325 	.globl __sdcc_program_startup
                            326 	.globl __start__stack
                            327 	.globl __mcs51_genXINIT
                            328 	.globl __mcs51_genXRAMCLEAR
                            329 	.globl __mcs51_genRAMCLEAR
                            330 	.area GSFINAL (CODE)
   0000 02s00r03            331 	ljmp	__sdcc_program_startup
                            332 ;--------------------------------------------------------
                            333 ; Home
                            334 ;--------------------------------------------------------
                            335 	.area HOME    (CODE)
                            336 	.area CSEG    (CODE)
                            337 ;--------------------------------------------------------
                            338 ; code
                            339 ;--------------------------------------------------------
                            340 	.area CSEG    (CODE)
   0003                     341 __sdcc_program_startup:
   0003 12s00r08            342 	lcall	_main
                            343 ;	return from main will lock up
   0006 80 FE               344 	sjmp .
                            345 ;------------------------------------------------------------
                            346 ;Allocation info for local variables in function 'main'
                            347 ;------------------------------------------------------------
                            348 ;count                     Allocated with name '_main_count_1_1'
                            349 ;buffer                    Allocated with name '_main_buffer_1_1'
                            350 ;test                      Allocated with name '_main_test_1_1'
                            351 ;p                         Allocated with name '_main_p_1_1'
                            352 ;q                         Allocated with name '_main_q_1_1'
                            353 ;LED                       Allocated to registers r2 
                            354 ;seven                     Allocated to registers r3 
                            355 ;------------------------------------------------------------
                            356 ;ex14.c:12: void main (void)
                            357 ;	-----------------------------------------
                            358 ;	 function main
                            359 ;	-----------------------------------------
   0008                     360 _main:
                    0002    361 	ar2 = 0x02
                    0003    362 	ar3 = 0x03
                    0004    363 	ar4 = 0x04
                    0005    364 	ar5 = 0x05
                    0006    365 	ar6 = 0x06
                    0007    366 	ar7 = 0x07
                    0000    367 	ar0 = 0x00
                    0001    368 	ar1 = 0x01
                            369 ;ex14.c:22: LED=0x01;
                            370 ;     genAssign
   0008 7A 01               371 	mov	r2,#0x01
                            372 ;ex14.c:23: seven=0x02;
                            373 ;     genAssign
   000A 7B 02               374 	mov	r3,#0x02
                            375 ;ex14.c:24: p  = (__xdata volatile unsigned char*) (0x8000);
                            376 ;     genAssign
   000C 75*00 00            377 	mov	_main_p_1_1,#0x00
   000F 75*01 80            378 	mov	(_main_p_1_1 + 1),#0x80
                            379 ;ex14.c:25: q = (__xdata volatile unsigned char*) (0x9000);
                            380 ;     genAssign
   0012 75*02 00            381 	mov	_main_q_1_1,#0x00
   0015 75*03 90            382 	mov	(_main_q_1_1 + 1),#0x90
                            383 ;ex14.c:26: for (count=0;count <sizeof (buffer);count++)
                            384 ;     genAssign
   0018 78 00               385 	mov	r0,#0x00
   001A 79 00               386 	mov	r1,#0x00
   001C 7E 00               387 	mov	r6,#0x00
   001E 7F 00               388 	mov	r7,#0x00
   0020                     389 00108$:
                            390 ;     genCmpLt
                            391 ;     genCmp
   0020 C3                  392 	clr	c
   0021 E8                  393 	mov	a,r0
   0022 94 80               394 	subb	a,#0x80
   0024 E9                  395 	mov	a,r1
   0025 94 00               396 	subb	a,#0x00
   0027 EE                  397 	mov	a,r6
   0028 94 00               398 	subb	a,#0x00
   002A EF                  399 	mov	a,r7
   002B 94 00               400 	subb	a,#0x00
                            401 ;     genIfxJump
                            402 ;	Peephole 108	removed ljmp by inverse jump logic
   002D 50 1D               403 	jnc	00121$
   002F                     404 00125$:
                            405 ;ex14.c:27: buffer[count]=(unsigned char) (count);
                            406 ;     genPlus
                            407 ;	Peephole 236.g	used r0 instead of ar0
   002F E8                  408 	mov	a,r0
   0030 24r00               409 	add	a,#_main_buffer_1_1
   0032 F5 82               410 	mov	dpl,a
                            411 ;	Peephole 236.g	used r1 instead of ar1
   0034 E9                  412 	mov	a,r1
   0035 34s00               413 	addc	a,#(_main_buffer_1_1 >> 8)
   0037 F5 83               414 	mov	dph,a
                            415 ;     genCast
   0039 88 04               416 	mov	ar4,r0
                            417 ;     genPointerSet
                            418 ;     genFarPointerSet
   003B EC                  419 	mov	a,r4
   003C F0                  420 	movx	@dptr,a
                            421 ;ex14.c:26: for (count=0;count <sizeof (buffer);count++)
                            422 ;     genPlus
                            423 ;     genPlusIncr
                            424 ;	tail increment optimized
   003D 08                  425 	inc	r0
   003E B8 00 DF            426 	cjne	r0,#0x00,00108$
   0041 09                  427 	inc	r1
   0042 B9 00 DB            428 	cjne	r1,#0x00,00108$
   0045 0E                  429 	inc	r6
   0046 BE 00 D7            430 	cjne	r6,#0x00,00108$
   0049 0F                  431 	inc	r7
                            432 ;ex14.c:29: for (count=0;count<100000;count++)
                            433 ;	Peephole 112.b	changed ljmp to sjmp
   004A 80 D4               434 	sjmp	00108$
   004C                     435 00121$:
                            436 ;     genAssign
   004C 7C 00               437 	mov	r4,#0x00
   004E 7D 00               438 	mov	r5,#0x00
   0050 7E 00               439 	mov	r6,#0x00
   0052 7F 00               440 	mov	r7,#0x00
   0054                     441 00112$:
                            442 ;     genCmpLt
                            443 ;     genCmp
   0054 C3                  444 	clr	c
   0055 EC                  445 	mov	a,r4
   0056 94 A0               446 	subb	a,#0xA0
   0058 ED                  447 	mov	a,r5
   0059 94 86               448 	subb	a,#0x86
   005B EE                  449 	mov	a,r6
   005C 94 01               450 	subb	a,#0x01
   005E EF                  451 	mov	a,r7
   005F 94 00               452 	subb	a,#0x00
                            453 ;     genIfxJump
                            454 ;	Peephole 108	removed ljmp by inverse jump logic
   0061 50 3D               455 	jnc	00115$
   0063                     456 00126$:
                            457 ;ex14.c:32: *p = *p ^ LED;
                            458 ;     genPointerGet
                            459 ;     genFarPointerGet
   0063 85*00 82            460 	mov	dpl,_main_p_1_1
   0066 85*01 83            461 	mov	dph,(_main_p_1_1 + 1)
   0069 E0                  462 	movx	a,@dptr
   006A F8                  463 	mov	r0,a
                            464 ;     genXor
   006B EA                  465 	mov	a,r2
   006C 62 00               466 	xrl	ar0,a
                            467 ;     genPointerSet
                            468 ;     genFarPointerSet
   006E 85*00 82            469 	mov	dpl,_main_p_1_1
   0071 85*01 83            470 	mov	dph,(_main_p_1_1 + 1)
   0074 E8                  471 	mov	a,r0
   0075 F0                  472 	movx	@dptr,a
                            473 ;ex14.c:33: *q = *q ^ seven;
                            474 ;     genPointerGet
                            475 ;     genFarPointerGet
   0076 85*02 82            476 	mov	dpl,_main_q_1_1
   0079 85*03 83            477 	mov	dph,(_main_q_1_1 + 1)
   007C E0                  478 	movx	a,@dptr
   007D F8                  479 	mov	r0,a
                            480 ;     genXor
   007E EB                  481 	mov	a,r3
   007F 62 00               482 	xrl	ar0,a
                            483 ;     genPointerSet
                            484 ;     genFarPointerSet
   0081 85*02 82            485 	mov	dpl,_main_q_1_1
   0084 85*03 83            486 	mov	dph,(_main_q_1_1 + 1)
   0087 E8                  487 	mov	a,r0
   0088 F0                  488 	movx	@dptr,a
                            489 ;ex14.c:34: test = LED;
                            490 ;     genCast
   0089 90 05 00            491 	mov	dptr,#_main_test_1_1
   008C EA                  492 	mov	a,r2
   008D F0                  493 	movx	@dptr,a
   008E A3                  494 	inc	dptr
                            495 ;	Peephole 181	changed mov to clr
   008F E4                  496 	clr	a
   0090 F0                  497 	movx	@dptr,a
                            498 ;ex14.c:29: for (count=0;count<100000;count++)
                            499 ;     genPlus
                            500 ;     genPlusIncr
                            501 ;	tail increment optimized
   0091 0C                  502 	inc	r4
   0092 BC 00 BF            503 	cjne	r4,#0x00,00112$
   0095 0D                  504 	inc	r5
   0096 BD 00 BB            505 	cjne	r5,#0x00,00112$
   0099 0E                  506 	inc	r6
   009A BE 00 B7            507 	cjne	r6,#0x00,00112$
   009D 0F                  508 	inc	r7
                            509 ;	Peephole 112.b	changed ljmp to sjmp
   009E 80 B4               510 	sjmp	00112$
   00A0                     511 00115$:
                            512 ;ex14.c:36: LED = LED <<1;
                            513 ;     genLeftShift
                            514 ;     genLeftShiftLiteral
                            515 ;     genlshOne
                            516 ;	Peephole 254	optimized left shift
   00A0 EA                  517 	mov	a,r2
   00A1 2A                  518 	add	a,r2
                            519 ;ex14.c:37: if (LED==0) LED=1;
                            520 ;     genCmpEq
                            521 ;	Peephole 115.b	jump optimization
   00A2 FA                  522 	mov	r2,a
   00A3 60 02               523 	jz	00128$
   00A5                     524 00127$:
                            525 ;	Peephole 112.b	changed ljmp to sjmp
   00A5 80 02               526 	sjmp	00102$
   00A7                     527 00128$:
                            528 ;     genAssign
   00A7 7A 01               529 	mov	r2,#0x01
   00A9                     530 00102$:
                            531 ;ex14.c:38: seven=seven<<1;
                            532 ;     genLeftShift
                            533 ;     genLeftShiftLiteral
                            534 ;     genlshOne
                            535 ;	Peephole 254	optimized left shift
   00A9 EB                  536 	mov	a,r3
   00AA 2B                  537 	add	a,r3
   00AB FB                  538 	mov	r3,a
                            539 ;ex14.c:39: if (seven==0x80) seven=0x02;
                            540 ;     genCmpEq
                            541 ;	Peephole 112.b	changed ljmp to sjmp
                            542 ;	Peephole 199	optimized misc jump sequence
   00AC BB 80 9D            543 	cjne	r3,#0x80,00121$
                            544 ;00129$:
                            545 ;	Peephole 200	removed redundant sjmp
   00AF                     546 00130$:
                            547 ;     genAssign
   00AF 7B 02               548 	mov	r3,#0x02
                            549 ;	Peephole 112.b	changed ljmp to sjmp
   00B1 80 99               550 	sjmp	00121$
   00B3                     551 00116$:
   00B3 22                  552 	ret
                            553 	.area CSEG    (CODE)
                            554 	.area XINIT   (CODE)
