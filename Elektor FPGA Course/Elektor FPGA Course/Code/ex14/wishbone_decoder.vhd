-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2006 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 6.0 (Build Build 202 06/20/2006)
-- Created on Tue Jul 18 05:33:27 2006

LIBRARY ieee;
USE ieee.std_logic_1164.all;


--  Entity Declaration

ENTITY wishbone_decoder IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		ADR_I : IN STD_LOGIC_VECTOR(15 downto 0);
		CYC_I : IN STD_LOGIC;
		STB_I : IN STD_LOGIC;
		WE_I : IN STD_LOGIC;
		DAT_I_MASTER : IN STD_LOGIC_VECTOR(7 downto 0);
		S1_ACK_I : IN STD_LOGIC;
		S1_DAT_I : IN STD_LOGIC_VECTOR(7 downto 0);
		S2_ACK_I : IN STD_LOGIC;
		S2_DAT_I : IN STD_LOGIC_VECTOR(7 downto 0);
		ACK_O : OUT STD_LOGIC;
		DAT_O_MASTER : OUT STD_LOGIC_VECTOR(7 downto 0);
		S1_CYC_O : OUT STD_LOGIC;
		S1_STB_O : OUT STD_LOGIC;
		S1_WE_O : OUT STD_LOGIC;
		S1_DAT_O : OUT STD_LOGIC_VECTOR(7 downto 0);
		S2_CYC_O : OUT STD_LOGIC;
		S2_STB_O : OUT STD_LOGIC;
		S2_WE_O : OUT STD_LOGIC;
		S2_DAT_O : OUT STD_LOGIC_VECTOR(7 downto 0);
		S1_ENABLE : OUT STD_LOGIC;
		S2_ENABLE : OUT STD_LOGIC
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END wishbone_decoder;


--  Architecture Body

ARCHITECTURE wishbone_decoder_architecture OF wishbone_decoder IS

SIGNAL S1_SEL,S2_SEL : STD_LOGIC;
	
BEGIN
  S1_ENABLE <= S1_SEL;
  S1_SEL<='1' WHEN ADR_I=x"8000" ELSE '0';		-- Slave 1 at adress 0x8000 (1000000000000000 binair)
  S2_SEL<='1' WHEN ADR_I=x"9000" ELSE '0';       -- Slave 2 at adress 0x9000 (1001000000000000 binair)

  S1_STB_O <= STB_I AND S1_SEL;
  S1_CYC_O <= CYC_I AND S1_SEL;
  S1_WE_O  <= WE_I;
  S1_DAT_O <= DAT_I_MASTER;

  S2_ENABLE <= S2_SEL;
  S2_STB_O <= STB_I AND S2_SEL;
  S2_CYC_O <= CYC_I AND S2_SEL;
  S2_WE_O  <= WE_I;
  S2_DAT_O <= DAT_I_MASTER;

  DAT_O_MASTER <= S1_DAT_I WHEN (S1_SEL='1') ELSE
                  S2_DAT_I WHEN (S2_SEL='1') ELSE
                  x"00";

  ACK_O <= S1_ACK_I WHEN (S1_SEL='1') ELSE
           S2_ACK_I WHEN (S2_SEL='1') ELSE
           CYC_I AND STB_I;

END wishbone_decoder_architecture;
