objectfile:web_serv.obj
time:Thu Dec 14 11:33:34 2006
cpuname:i8051
import:__st_dptr_r23
import:__st_dptr_r67
import:__ld_dptr_r23
import:__ld_dptr_r67
import:__ld_dptr_r45
import:_close_socket_tcp
import:__ldc_dptr_r23
import:__ldc_dptr_r45
import:_rcv_len
import:_poll_net
import:_rcv_buf
import:_uc_socket
import:_send_socket_tcp
import:__mul_i2
import:_notready_socket_tcp
import:_allocate_tx_buf
export:_html_notfound @0:0
export:_webpage_bind @18:0
export:_http_info @19:2
export:_webpage_name @f:0
export:_gendyn_html @4:0
export:_web_args @19:0
export:_csock @1:0
export:_url_getarg_str @15:0
export:_url_getarg_no @12:0
export:_poll_webserver @c:0
segment:lit @0:m u:e5
48 54 54 50 2f 31 2e 30 20 32 30 30 20 4f 4b 0d
0a 43 6f 6e 74 65 6e 74 2d 54 79 70 65 3a 20 74
65 78 74 2f 68 74 6d 6c 0d 0a 43 6f 6e 6e 65 63
74 69 6f 6e 3a 20 63 6c 6f 73 65 0d 0a 0d 0a 3c
68 74 6d 6c 3e 3c 68 65 61 64 3e 3c 74 69 74 6c
65 3e 45 6c 65 6b 74 6f 72 20 46 50 47 41 20 57
65 62 73 65 72 76 65 72 3c 2f 74 69 74 6c 65 3e
3c 2f 68 65 61 64 3e 3c 62 6f 64 79 20 74 65 78
74 3d 22 23 30 30 30 30 46 46 22 20 62 67 63 6f
6c 6f 72 3d 22 23 46 46 46 46 38 30 22 20 6c 69
6e 6b 3d 22 23 46 46 30 30 30 30 22 3e 45 6c 65
6b 74 6f 72 20 46 50 47 41 20 57 65 62 73 65 72
76 65 72 20 2d 20 50 61 67 65 20 6e 6f 74 20 66
6f 75 6e 64 3c 2f 62 6f 64 79 3e 3c 2f 68 74 6d
6c 3e 0d 0a 00
segment:data @1:m u:1 c:xram
ff
segment:_gendyn_html_formal_near @2:m s:0 u:0 n f c:dram
segment:_gendyn_html_local_near @3:m s:3 u:0 n f c:dram
segment:__gendyn_html @4:m u:198
8e 00 8f 00 8c 08 8d 09 ae 00 af 00 74 02 2f ff
e4 3e fe 8e 83 8f 82 12 00 00 8e 0c 8f 0d ae 00
af 00 74 04 2f ff e4 3e fe 8e 83 8f 82 12 00 00
8e 0e 8f 0f ae 00 af 00 0f ef 70 00 0e 85 06 83
85 07 82 e0 ff 8f 00 e4 f5 0a f5 0b 02 00 00 85
0c 83 85 0d 82 e4 93 ff 8f f0 05 0d e5 0d 70 00
05 0c e5 0f 15 0f 70 00 15 0e e5 00 70 00 02 00
00 74 ff 65 f0 60 00 02 00 00 ae 0c af 0d 8e 83
8f 82 12 00 00 e4 f8 f9 80 00 09 e9 70 00 08 8c
83 8d 82 ae 83 af 82 74 01 2f fd e4 3e fc e0 ff
70 00 7e 00 7f 64 d3 e9 9f e8 9e 40 00 78 00 79
64 e5 0b 29 fb e5 0a 38 fa 7e 00 7f 64 d3 eb 9f
ea 9e 40 00 74 ff 25 0d f5 0d 74 ff 35 0c f5 0c
05 0f e5 0f 70 00 05 0e 02 00 00 ae 0c af 0d 8e
83 8f 82 12 00 00 74 02 25 0d f5 0d e4 35 0c f5
0c 74 fe 25 0f f5 0f 74 ff 35 0e f5 0e 80 00 8a
83 8b 82 ae 83 af 82 74 01 2f fb e4 3e fa e0 ff
85 08 83 85 09 82 ef f0 05 09 e5 09 70 00 05 08
05 0b e5 0b 70 00 05 0a ac 00 ad 01 74 ff 2d f9
74 ff 3c f8 ec 4d 70 00 80 00 af f0 85 08 83 85
09 82 ef f0 05 09 e5 09 70 00 05 08 05 0b e5 0b
70 00 05 0a ae 0a af 0b ef 64 64 4e 60 00 e5 0e
45 0f 60 00 02 00 00 ae 00 af 00 74 02 2f fb e4
3e fa ae 0c af 0d 8a 83 8b 82 12 00 00 ae 00 af
00 74 04 2f fb e4 3e fa ae 0e af 0f 8a 83 8b 82
12 00 00 ae 0a af 0b 22
segment:_poll_webserver_formal_near @5:m s:0 u:0 n f c:dram
segment:_poll_webserver_local_near @6:m s:8 u:0 n f c:dram
segment:_poll_net_formal_near @7:m s:0 u:0 n f c:dram
segment:_notready_socket_tcp_formal_near @8:m s:0 u:0 n f c:dram
segment:_allocate_tx_buf_formal_near @9:m s:0 u:0 n f c:dram
segment:_send_socket_tcp_formal_near @a:m s:0 u:0 n f c:dram
segment:_close_socket_tcp_formal_near @b:m s:0 u:0 n f c:dram
segment:__poll_webserver @c:m u:2c0
12 00 00 8e 00 8f 00 e5 00 45 00 60 00 02 00 00
90 00 00 e0 fb f4 70 00 02 00 00 af 03 e4 fe fc
7d 06 12 00 00 7c 00 7d 00 ed 2f ff ec 3e fe 85
06 83 85 07 82 e0 ff bf 03 00 7d 01 af 03 12 00
00 ee 4f 70 00 90 00 00 e0 ff e4 fe 2f ff 74 f5
3e fe 8e 00 8f 00 90 00 00 e4 f0 a3 f0 90 00 00
74 ff f0 02 00 00 ae 00 af 00 bf 00 00 be d4 00
80 00 02 00 00 e4 f5 00 af 00 e4 fe fc 7d 06 12
00 00 7c 00 7d 00 ed 2f ff ec 3e fe 85 06 83 85
07 82 e0 fd 7f 03 c3 ed 9f 40 00 7d 01 af 00 12
00 00 ee 4f 70 00 af 00 e4 fe 2f ff 74 f5 3e fe
8e 00 8f 00 90 00 00 e4 f0 a3 f0 05 00 74 02 65
00 60 00 02 00 00 7c f0 7d 00 ae 00 af 00 c3 ef
9d ee 9c 50 00 02 00 00 ae 00 af 00 8f 00 af 00
e4 fe fc 7d 32 12 00 00 7c 00 7d 00 ed 2f ff ec
3e fe 8e 83 8f 82 12 00 00 ef 64 50 70 00 ee 60
00 ae 00 af 00 02 00 00 af 00 e4 fe fc 7d 06 12
00 00 7c 00 7d 00 ed 2f ff ec 3e fe 8e 00 8f 00
85 00 83 85 00 82 e0 ff 8f 00 ae 00 af 00 7f 00
bf 00 00 be f5 00 80 00 02 00 00 e4 f8 f9 e4 fa
fb 02 00 00 7e 00 7f 00 ef 2b ff ee 3a fe 85 06
83 85 07 82 e0 ff 8f f0 e5 00 60 00 af 00 ef 64
01 70 00 02 00 00 af 00 ef 64 02 70 00 02 00 00
02 00 00 74 47 65 f0 60 00 02 00 00 ea 4b 60 00
02 00 00 75 00 01 af 00 e4 fe 2f f9 74 90 3e f8
ae 00 af 00 74 02 2f fd e4 3e fc 7e 00 7f 00 8c
83 8d 82 12 00 00 ae 00 af 00 74 04 2f fd e4 3e
fc 7e 00 7f e5 8c 83 8d 82 12 00 00 ae 00 af 00
0f ef 70 00 0e 85 06 83 85 07 82 74 01 f0 80 00
74 0a 65 f0 70 00 75 00 02 80 00 74 0a 65 f0 70
00 75 00 03 80 00 af f0 ef 64 0d 60 00 75 00 01
0b eb 70 00 0a 90 00 00 12 00 00 c3 eb 9f ea 9e
50 00 02 00 00 e8 49 60 00 af 00 85 00 83 85 00
82 ef f0 ae 00 af 01 02 00 00 7d 03 af 00 c3 ef
9d 50 00 02 00 00 7d 01 af 00 12 00 00 ee 4f 60
00 02 00 00 75 00 03 ae 00 af 00 74 04 2f ff e4
3e fe 8e 83 8f 82 12 00 00 ee 4f 60 00 12 00 00
8e 00 8f 00 ac 00 ad 00 ae 00 af 00 12 00 00 aa
06 ab 07 ac 00 ad 00 af 00 12 00 00 af 00 90 00
00 ef f0 80 00 75 00 04 e4 fd af 00 12 00 00 ee
4f 70 00 e4 f5 00 af 00 12 00 00 80 00 75 00 04
af 00 85 00 83 85 00 82 ef f0 e4 fe ff 80 00 7c
f8 7d 00 ae 00 af 00 c3 ef 9d ee 9c 40 00 85 00
83 85 00 82 e4 f0 e4 fe ff 80 00 ae 00 af 00 22
segment:_webpage_name_formal_near @d:m s:0 u:0 n f c:dram
segment:_webpage_name_local_near @e:m s:0 u:0 n f c:dram
segment:__webpage_name @f:m u:47
7c 00 7d 00 e4 fe ff 90 00 00 12 00 00 90 00 00
e4 f0 85 04 83 85 05 82 e0 fb bb 3f 00 74 01 2d
ff e4 3c fe 90 00 00 12 00 00 80 00 7f 20 d3 eb
9f 40 00 0d ed 70 00 0c 80 00 85 04 83 85 05 82
e4 f0 7e 00 7f 00 22
segment:_url_getarg_no_formal_near @10:m s:0 u:0 n f c:dram
segment:_url_getarg_no_local_near @11:m s:0 u:0 n f c:dram
segment:__url_getarg_no @12:m u:78
90 00 00 12 00 00 ee 4f 70 00 e4 ff 02 00 00 90
00 00 12 00 00 74 01 2d ff e4 3c fe 90 00 00 12
00 00 85 04 83 85 05 82 e0 ff 64 61 60 00 ef 64
41 60 00 e4 ff 02 00 00 e4 fb 90 00 00 12 00 00
74 01 2d ff e4 3c fe 90 00 00 12 00 00 85 04 83
85 05 82 e0 ff 74 d0 2f fd 7f 09 d3 ed 9f 50 00
7f 0a eb 8f f0 a4 ff ed 2f fb 80 00 ed 64 0d 60
00 e4 ff 80 00 af 03 22
segment:_url_getarg_str_formal_near @13:m s:0 u:0 n f c:dram
segment:_url_getarg_str_local_near @14:m s:0 u:0 n f c:dram
segment:__url_getarg_str @15:m u:58
90 00 00 12 00 00 90 00 00 12 00 00 85 06 83 85
07 82 e0 fd 64 26 60 00 7f 20 d3 ed 9f 50 00 80
00 90 00 00 12 00 00 0f ef 70 00 0e 90 00 00 12
00 00 80 00 90 00 00 12 00 00 85 06 83 85 07 82
e4 f0 90 00 00 12 00 00 0f ef 70 00 0e 90 00 00
12 00 00 ae 02 af 03 22
segment:_webpage_bind_formal_near @16:m s:0 u:0 n f c:dram
segment:_webpage_bind_local_near @17:m s:0 u:0 n f c:dram
segment:__webpage_bind @18:m u:76
8c 08 8d 09 ad 07 e4 fc fe 7f 06 12 00 00 7a 00
7b 00 eb 2f f9 ea 3e f8 ae 08 af 09 8e 83 8f 82
12 00 00 74 04 29 ff e4 38 fe 8e 83 8f 82 12 00
00 ae 08 af 09 74 02 2f ff e4 3e fe ac 06 ad 07
74 01 2d ff e4 3c fe 8e 08 8f 09 85 04 83 85 05
82 e4 93 fb 74 01 29 ff e4 38 fe 85 06 83 85 07
82 eb f0 74 02 29 fb e4 38 fa ae 08 af 09 8a 83
8b 82 12 00 00 22
segment:bss @19:m u:e n c:xram
sgraph:_gendyn_html_formal_near _gendyn_html_local_near __gendyn_html
sgraph:_poll_webserver_formal_near _poll_webserver_local_near __poll_webserver
sgraph:_poll_webserver_local_near _close_socket_tcp_formal_near __poll_webserver 6
sgraph:_poll_webserver_local_near _notready_socket_tcp_formal_near __poll_webserver 6
sgraph:_poll_webserver_local_near _send_socket_tcp_formal_near __poll_webserver 6
sgraph:_poll_webserver_local_near _gendyn_html_formal_near __poll_webserver 8
sgraph:_poll_webserver_local_near _allocate_tx_buf_formal_near __poll_webserver 6
sgraph:_poll_webserver_local_near _notready_socket_tcp_formal_near __poll_webserver 6
sgraph:_poll_webserver_local_near _notready_socket_tcp_formal_near __poll_webserver 3
sgraph:_poll_webserver_local_near _notready_socket_tcp_formal_near __poll_webserver 2
sgraph:_poll_webserver_local_near _poll_net_formal_near __poll_webserver 0
sgraph:_webpage_name_formal_near _webpage_name_local_near __webpage_name
sgraph:_url_getarg_no_formal_near _url_getarg_no_local_near __url_getarg_no
sgraph:_url_getarg_str_formal_near _url_getarg_str_local_near __url_getarg_str
sgraph:_webpage_bind_formal_near _webpage_bind_local_near __webpage_bind
src:tcpip\web_serv.s51 #0
src:C:\uC51\include\reg51.def #1
src:C:\uC51\include\reg52.def #2
src:C:\uC51\include\reg51.def #3
ref byte #0:3d @4:1 @3:0 0 +
ref byte #0:3e @4:3 @3:0 0 + 1 +
ref byte #0:42 @4:9 @3:0 0 +
ref byte #0:43 @4:b @3:0 0 + 1 +
ref w_hl #0:4c @4:18 __ld_dptr_r67
ref byte #0:51 @4:1f @3:0 0 +
ref byte #0:52 @4:21 @3:0 0 + 1 +
ref w_hl #0:5b @4:2e __ld_dptr_r67
ref byte #0:60 @4:35 @3:0 0 +
ref byte #0:61 @4:37 @3:0 0 + 1 +
ref rbyte #0:64 @4:3b @4:3d
ref byte #0:6c @4:46 @3:0 2 +
ref w_hl #0:72 @4:4d @4:15e
ref rbyte #0:7f @4:5f @4:62
ref rbyte #0:85 @4:67 @4:6a
ref byte #0:89 @4:6b @3:0 2 +
ref rbyte #0:8a @4:6d @4:71
ref w_hl #0:8b @4:6f @4:13a
ref rbyte #0:8f @4:76 @4:7a
ref w_hl #0:90 @4:78 @4:13a
ref w_hl #0:97 @4:83 __ldc_dptr_r45
ref rbyte #0:9e @4:89 @4:8f
ref rbyte #0:a3 @4:8d @4:8f
ref rbyte #0:b4 @4:a1 @4:8a
ref rbyte #0:bd @4:ac @4:b1
ref rbyte #0:d0 @4:c3 @4:db
ref rbyte #0:db @4:d5 @4:d8
ref w_hl #0:df @4:d9 @4:167
ref w_hl #0:e6 @4:e4 __ldc_dptr_r23
ref rbyte #0:f6 @4:fe @4:128
ref rbyte #0:10e @4:11d @4:120
ref rbyte #0:114 @4:125 @4:128
ref rbyte #0:124 @4:137 @4:ff
ref rbyte #0:126 @4:139 @4:154
ref rbyte #0:131 @4:149 @4:14c
ref rbyte #0:137 @4:151 @4:154
ref rbyte #0:143 @4:15d @4:167
ref rbyte #0:149 @4:163 @4:167
ref w_hl #0:14a @4:165 @4:4f
ref byte #0:14e @4:168 @3:0 0 +
ref byte #0:14f @4:16a @3:0 0 + 1 +
ref w_hl #0:15a @4:17b __st_dptr_r67
ref byte #0:15c @4:17e @3:0 0 +
ref byte #0:15d @4:180 @3:0 0 + 1 +
ref w_hl #0:168 @4:191 __st_dptr_r67
ref w_hl #0:192 @c:1 _poll_net
ref byte #0:194 @c:4 @6:0 0 +
ref byte #0:195 @c:6 @6:0 0 + 1 +
ref byte #0:197 @c:8 @6:0 0 +
ref byte #0:198 @c:a @6:0 0 + 1 +
ref rbyte #0:199 @c:c @c:10
ref w_hl #0:19a @c:e @c:66
ref w_hl #0:19c @c:11 _csock
ref rbyte #0:1a0 @c:17 @c:1b
ref w_hl #0:1a1 @c:19 @c:66
ref w_hl #0:1a8 @c:23 __mul_i2
ref byte #0:1a9 @c:26 _http_info 8 >> 255 &
ref byte #0:1aa @c:28 _http_info 255 &
ref rbyte #0:1b5 @c:39 @c:66
ref w_hl #0:1b8 @c:3f _notready_socket_tcp
ref rbyte #0:1bb @c:44 @c:66
ref w_hl #0:1bd @c:46 _csock
ref byte #0:1c7 @c:53 @6:0 0 +
ref byte #0:1c8 @c:55 @6:0 0 + 1 +
ref w_hl #0:1ca @c:57 _rcv_len
ref w_hl #0:1d0 @c:5e _csock
ref w_hl #0:1d4 @c:64 @c:c6
ref byte #0:1d7 @c:67 @6:0 0 +
ref byte #0:1d8 @c:69 @6:0 0 + 1 +
ref rbyte #0:1d9 @c:6c @c:72
ref rbyte #0:1da @c:6f @c:72
ref rbyte #0:1db @c:71 @c:75
ref w_hl #0:1dd @c:73 @c:c6
ref byte #0:1e2 @c:77 @6:0 2 +
ref byte #0:1e5 @c:79 @6:0 2 +
ref w_hl #0:1ea @c:80 __mul_i2
ref byte #0:1eb @c:83 _http_info 8 >> 255 &
ref byte #0:1ec @c:85 _http_info 255 &
ref rbyte #0:1fb @c:9a @c:bb
ref byte #0:1fd @c:9e @6:0 2 +
ref w_hl #0:1fe @c:a0 _notready_socket_tcp
ref rbyte #0:201 @c:a5 @c:bb
ref byte #0:203 @c:a7 @6:0 2 +
ref byte #0:20b @c:b1 @6:0 0 +
ref byte #0:20c @c:b3 @6:0 0 + 1 +
ref w_hl #0:20e @c:b5 _rcv_len
ref byte #0:216 @c:bc @6:0 2 +
ref byte #0:219 @c:c0 @6:0 2 +
ref rbyte #0:21a @c:c2 @c:c6
ref w_hl #0:21b @c:c4 @c:78
ref byte #0:223 @c:cb @6:0 0 +
ref byte #0:224 @c:cd @6:0 0 + 1 +
ref rbyte #0:22a @c:d4 @c:d8
ref w_hl #0:22b @c:d6 @c:2bb
ref byte #0:22e @c:d9 @6:0 0 +
ref byte #0:22f @c:db @6:0 0 + 1 +
ref byte #0:231 @c:dd @6:0 2 +
ref byte #0:233 @c:df @6:0 2 +
ref w_hl #0:238 @c:e6 __mul_i2
ref byte #0:239 @c:e9 _uc_socket 14 + 8 >> 255 &
ref byte #0:23a @c:eb _uc_socket 14 + 255 &
ref w_hl #0:243 @c:f7 __ld_dptr_r67
ref rbyte #0:246 @c:fd @c:101
ref rbyte #0:248 @c:100 @c:108
ref byte #0:24b @c:102 @6:0 0 +
ref byte #0:24c @c:104 @6:0 0 + 1 +
ref w_hl #0:24d @c:106 @c:2bf
ref byte #0:250 @c:109 @6:0 2 +
ref w_hl #0:255 @c:110 __mul_i2
ref byte #0:256 @c:113 _http_info 8 >> 255 &
ref byte #0:257 @c:115 _http_info 255 &
ref byte #0:25f @c:11d @6:0 3 +
ref byte #0:260 @c:11f @6:0 3 + 1 +
ref byte #0:262 @c:121 @6:0 3 +
ref byte #0:263 @c:124 @6:0 3 + 1 +
ref byte #0:267 @c:129 @6:0 5 +
ref byte #0:269 @c:12b @6:0 0 +
ref byte #0:26a @c:12d @6:0 0 + 1 +
ref rbyte #0:26c @c:132 @c:138
ref rbyte #0:26d @c:135 @c:138
ref rbyte #0:26e @c:137 @c:13b
ref w_hl #0:270 @c:139 @c:29f
ref w_hl #0:27c @c:142 @c:1f5
ref byte #0:27f @c:145 _rcv_buf 8 >> 255 &
ref byte #0:280 @c:147 _rcv_buf 255 &
ref byte #0:28e @c:159 @6:0 5 +
ref rbyte #0:28f @c:15b @c:173
ref byte #0:290 @c:15d @6:0 5 +
ref rbyte #0:293 @c:162 @c:166
ref w_hl #0:294 @c:164 @c:1d0
ref byte #0:296 @c:167 @6:0 5 +
ref rbyte #0:299 @c:16c @c:170
ref w_hl #0:29a @c:16e @c:1db
ref w_hl #0:29c @c:171 @c:1f0
ref rbyte #0:2a2 @c:178 @c:17c
ref w_hl #0:2a3 @c:17a @c:1f0
ref rbyte #0:2a7 @c:17f @c:183
ref w_hl #0:2a8 @c:181 @c:1f0
ref byte #0:2ab @c:184 @6:0 5 +
ref byte #0:2ad @c:187 @6:0 2 +
ref byte #0:2b6 @c:191 @6:0 3 +
ref byte #0:2b7 @c:193 @6:0 3 + 1 +
ref byte #0:2be @c:19c _html_notfound 8 >> 255 &
ref byte #0:2bf @c:19e _html_notfound 255 &
ref w_hl #0:2c2 @c:1a4 __st_dptr_r67
ref byte #0:2c4 @c:1a7 @6:0 3 +
ref byte #0:2c5 @c:1a9 @6:0 3 + 1 +
ref w_hl #0:2d0 @c:1ba __st_dptr_r67
ref byte #0:2d2 @c:1bd @6:0 3 +
ref byte #0:2d3 @c:1bf @6:0 3 + 1 +
ref rbyte #0:2d6 @c:1c3 @c:1c5
ref rbyte #0:2de @c:1cf @c:1f0
ref rbyte #0:2e3 @c:1d5 @c:1f0
ref byte #0:2e5 @c:1d7 @6:0 5 +
ref rbyte #0:2e7 @c:1da @c:1f0
ref rbyte #0:2ec @c:1e0 @c:1e6
ref byte #0:2ee @c:1e2 @6:0 5 +
ref rbyte #0:2f0 @c:1e5 @c:1f0
ref rbyte #0:2f6 @c:1ec @c:1f0
ref byte #0:2f8 @c:1ee @6:0 5 +
ref rbyte #0:302 @c:1f3 @c:1f5
ref w_hl #0:307 @c:1f6 _rcv_len
ref w_hl #0:308 @c:1f9 __ld_dptr_r67
ref rbyte #0:30e @c:201 @c:205
ref w_hl #0:30f @c:203 @c:144
ref rbyte #0:314 @c:208 @c:21a
ref byte #0:316 @c:20a @6:0 5 +
ref byte #0:317 @c:20c @6:0 3 +
ref byte #0:318 @c:20f @6:0 3 + 1 +
ref w_hl #0:31e @c:218 @c:2bf
ref byte #0:322 @c:21d @6:0 5 +
ref rbyte #0:326 @c:222 @c:226
ref w_hl #0:327 @c:224 @c:290
ref byte #0:32b @c:229 @6:0 2 +
ref w_hl #0:32c @c:22b _notready_socket_tcp
ref rbyte #0:32f @c:230 @c:234
ref w_hl #0:330 @c:232 @c:28d
ref byte #0:333 @c:235 @6:0 5 +
ref byte #0:335 @c:238 @6:0 3 +
ref byte #0:336 @c:23a @6:0 3 + 1 +
ref w_hl #0:33f @c:247 __ld_dptr_r67
ref rbyte #0:342 @c:24c @c:275
ref w_hl #0:344 @c:24e _allocate_tx_buf
ref byte #0:346 @c:251 @6:0 6 +
ref byte #0:347 @c:253 @6:0 6 + 1 +
ref byte #0:349 @c:255 @6:0 6 +
ref byte #0:34a @c:257 @6:0 6 + 1 +
ref byte #0:34b @c:259 @6:0 3 +
ref byte #0:34c @c:25b @6:0 3 + 1 +
ref w_hl #0:34d @c:25d _gendyn_html
ref byte #0:352 @c:264 @6:0 6 +
ref byte #0:353 @c:266 @6:0 6 + 1 +
ref byte #0:354 @c:268 @6:0 2 +
ref w_hl #0:355 @c:26a _send_socket_tcp
ref byte #0:357 @c:26d @6:0 2 +
ref w_hl #0:358 @c:26f _csock
ref rbyte #0:35c @c:274 @c:290
ref byte #0:35f @c:276 @6:0 5 +
ref byte #0:363 @c:27b @6:0 2 +
ref w_hl #0:364 @c:27d _notready_socket_tcp
ref rbyte #0:367 @c:282 @c:290
ref byte #0:36a @c:285 @6:0 5 +
ref byte #0:36c @c:287 @6:0 2 +
ref w_hl #0:36d @c:289 _close_socket_tcp
ref rbyte #0:36f @c:28c @c:290
ref byte #0:372 @c:28e @6:0 5 +
ref byte #0:378 @c:291 @6:0 5 +
ref byte #0:379 @c:293 @6:0 3 +
ref byte #0:37a @c:296 @6:0 3 + 1 +
ref rbyte #0:381 @c:29e @c:2bf
ref byte #0:386 @c:2a4 @6:0 0 +
ref byte #0:387 @c:2a6 @6:0 0 + 1 +
ref rbyte #0:38d @c:2ad @c:2bb
ref byte #0:38f @c:2af @6:0 3 +
ref byte #0:390 @c:2b2 @6:0 3 + 1 +
ref rbyte #0:397 @c:2ba @c:2bf
ref byte #0:39c @c:2bc @6:0 0 +
ref byte #0:39d @c:2be @6:0 0 + 1 +
ref byte #0:3ab @f:1 _rcv_buf 5 + 8 >> 255 &
ref byte #0:3ac @f:3 _rcv_buf 5 + 255 &
ref w_hl #0:3b2 @f:8 _web_args
ref w_hl #0:3b3 @f:b __st_dptr_r67
ref w_hl #0:3b5 @f:e _rcv_buf 1399 +
ref rbyte #0:3c1 @f:1c @f:2c
ref w_hl #0:3c9 @f:25 _web_args
ref w_hl #0:3ca @f:28 __st_dptr_r67
ref rbyte #0:3cc @f:2b @f:3a
ref rbyte #0:3d4 @f:32 @f:3a
ref rbyte #0:3d8 @f:36 @f:38
ref rbyte #0:3dc @f:39 @f:12
ref byte #0:3e4 @f:43 _rcv_buf 5 + 8 >> 255 &
ref byte #0:3e5 @f:45 _rcv_buf 5 + 255 &
ref w_hl #0:3f2 @12:1 _web_args
ref w_hl #0:3f3 @12:4 __ld_dptr_r67
ref rbyte #0:3f6 @12:9 @12:f
ref w_hl #0:3fa @12:d @12:77
ref w_hl #0:3fd @12:10 _web_args
ref w_hl #0:3fe @12:13 __ld_dptr_r45
ref w_hl #0:405 @12:1d _web_args
ref w_hl #0:406 @12:20 __st_dptr_r67
ref rbyte #0:40e @12:2d @12:38
ref rbyte #0:411 @12:32 @12:38
ref w_hl #0:415 @12:36 @12:77
ref w_hl #0:41e @12:3b _web_args
ref w_hl #0:41f @12:3e __ld_dptr_r45
ref w_hl #0:426 @12:48 _web_args
ref w_hl #0:427 @12:4b __st_dptr_r67
ref rbyte #0:436 @12:5f @12:6c
ref rbyte #0:443 @12:6b @12:3a
ref rbyte #0:448 @12:70 @12:75
ref rbyte #0:44c @12:74 @12:77
ref w_hl #0:45d @15:1 _web_args
ref w_hl #0:45e @15:4 __ld_dptr_r23
ref w_hl #0:463 @15:7 _web_args
ref w_hl #0:464 @15:a __ld_dptr_r67
ref rbyte #0:46c @15:17 @15:1f
ref rbyte #0:471 @15:1e @15:21
ref rbyte #0:474 @15:20 @15:34
ref w_hl #0:477 @15:22 _web_args
ref w_hl #0:478 @15:25 __ld_dptr_r67
ref rbyte #0:47b @15:2a @15:2c
ref w_hl #0:47e @15:2d _web_args
ref w_hl #0:47f @15:30 __st_dptr_r67
ref rbyte #0:481 @15:33 @15:6
ref w_hl #0:484 @15:35 _web_args
ref w_hl #0:485 @15:38 __ld_dptr_r67
ref w_hl #0:48b @15:43 _web_args
ref w_hl #0:48c @15:46 __ld_dptr_r67
ref rbyte #0:48f @15:4b @15:4d
ref w_hl #0:492 @15:4e _web_args
ref w_hl #0:493 @15:51 __st_dptr_r67
ref w_hl #0:4ac @18:c __mul_i2
ref byte #0:4ad @18:f _http_info 8 >> 255 &
ref byte #0:4ae @18:11 _http_info 255 &
ref w_hl #0:4bb @18:21 __ldc_dptr_r23
ref w_hl #0:4c4 @18:2f __st_dptr_r23
ref w_hl #0:4f5 @18:73 __st_dptr_r67
objectdebug
dtx ; *** 'C:\uC51\bin\uc51.exe': uC/51 - ANSI C compiler
dtx ; *** Standard 'i8051', V1.25, Jan 24 2004 (C) WWW.WICKENHAEUSER.COM
dtx ; sourcefile: 'tcpip\web_serv.c', time: Thu Dec 14 11:33:34 2006
dtx 
dtx  .hide
dtx  .show
dtx XDS=0
dtx COS=1
dtx NES=2
dtx INS=2
dtx .macro __line
dtx lcall $0006 ; uC/51 debugger
dtx .endmacro
dtx         .include <reg51.def>
dtx ; **** 8051 standard defs ***
dtx ; common registers to all 8051's
dtx         .hide
dtx         .show
dtx         .include <reg52.def>
dtx ; **** 80C52 (extended) defs ***
dtx 
dtx         .hide
dtx         .show
dtx  .segment lit
dtx  .export _html_notfound ; code unsigned char html_notfound[]
dtx _html_notfound: ; code unsigned char html_notfound[]
dco @0:0 u:2b  .dc.b "HTTP/1.0 200 OK",13,10,"Content-Type: text/html",13,10,"C"
dco @0:2b u:2d  .dc.b "onnection: close",13,10,13,10,"<html><head><title>Elekto"
dco @0:58 u:33  .dc.b "r FPGA Webserver</title></head><body text=",34,"#0000FF",34
dco @0:8b u:27  .dc.b " bgcolor=",34,"#FFFF80",34," link=",34,"#FF0000",34,">Elekt"
dco @0:b2 u:33  .dc.b "or FPGA Webserver - Page not found</body></html>",13,10,0
dtx  .segment data, sclass xram
dtx  .export _csock ; xdata unsigned char csock
dtx _csock: ; xdata unsigned char csock
dco @1:0 u:1  .dc.b 255
dtx  .export _gendyn_html ; unsigned int gendyn_html(xdata HTTP_INFO *, xdata unsigned char *)
dtx  .segment _gendyn_html_formal_near, size 0, fill, notext, sclass dram
dtx  .segment _gendyn_html_local_near, size 3, fill, notext, sclass dram
dtx  .sgraph _gendyn_html_formal_near, _gendyn_html_local_near, __gendyn_html
dtx ?gendyn_html_df = _gendyn_html_local_near+2 ; unsigned char
dtx ?gendyn_html_pinfo = _gendyn_html_local_near+0 ; xdata HTTP_INFO *
dtx 
dtx  .segment __gendyn_html
dtx _gendyn_html: ; (leaf function) unsigned int gendyn_html(xdata HTTP_INFO *, xdata unsigned char *)
dtx  ; parameter 'pbuf' in 'RW45' assigned to 'B1_RW89'
dtx  ; parameter 'pinfo' in 'RW67' moved and assigned to local '?gendyn_html_pinfo'
dco @4:0 u:2  mov ?gendyn_html_pinfo,R6
dco @4:2 u:2  mov ?gendyn_html_pinfo+1,R7
dco @4:4 u:2  mov AR8,R4
dco @4:6 u:2  mov AR9,R5
dhl /*********************************************************************************
dhl * Web_serv.C
dhl * 
dhl * Webserver_Layer
dhl * The Webserver is a top-layer of poll_net()
dhl *
dhl * V2.01 (C) 2004 WWW.WICKENHAEUSER.DE
dhl *
dhl * Please support us:
dhl * ==================
dhl * 
dhl * The offer the uC/51-ANSI-C-Compiler at a very low price. So we do not have a
dhl * large budget for advertisements. Every link to our Internet pages
dhl * (WWW.WICKENHAEUSER.COM, WWW.WICKENHAEUSER.DE, WWW.FLEXGATE.COM, WWW.FLEXGATE.DE)
dhl * is welcome! 
dhl *
dhl **********************************************************************************/
dhl 
dhl #include <stdio.h>
dhl #include <string.h>     
dhl 
dhl #include <reg52.h>
dhl 
dhl #include "net.h"                // Basic network handling (public)
dhl #include "web_serv.h"           // Webserver
dhl 
dhl // This is the Default Message. Using code 200 displays OUR page, whereas 404 may display a Browser's 
dhl code uchar html_notfound[] = {
dhl "HTTP/1.0 200 OK\r\n"
dhl "Content-Type: text/html\r\n"
dhl "Connection: close\r\n"
dhl "\r\n"
dhl "<html><head><title>Elektor FPGA Webserver</title></head>"
dhl "<body text=\"#0000FF\" bgcolor=\"#FFFF80\" link=\"#FF0000\">"
dhl "Elektor FPGA Webserver - Page not found"
dhl "</body></html>\r\n"
dhl };
dhl 
dhl // Here the HTTP state machine is managed
dhl HTTP_INFO http_info[MAX_SOCK];  
dhl 
dhl xdata uchar *web_args; // static internal variable, points to start of first argument
dhl 
dhl uchar csock=0xFF;       //   static internal variable, Current-Socket Index if !0xFF
dhl 
dhl /**********************************************************************************
dhl * uint gendyn_data(xdata HTTP_INFO *pinfo, xdata uchar *pbuf)
dhl *
dhl * Fill given buffer with dynamic data, return size (max MAX_TX)
dhl **********************************************************************************/
dhl uint gendyn_html(xdata HTTP_INFO *pinfo, xdata uchar *pbuf){
dco @4:8 u:2  mov R6,?gendyn_html_pinfo
dco @4:a u:2  mov R7,?gendyn_html_pinfo+1
dco @4:c u:2  mov A,#2
dco @4:e u:1  add A,R7
dco @4:f u:1  mov R7,A
dco @4:10 u:1  clr A
dco @4:11 u:1  addc A,R6
dco @4:12 u:1  mov R6,A
dco @4:13 u:2  mov DPH,R6
dco @4:15 u:2  mov DPL,R7
dco @4:17 u:3  lcall __ld_dptr_r67
dtx  ; variable 'psrc' assigned to register 'B1_RW1213'
dco @4:1a u:2  mov AR12,R6
dco @4:1c u:2  mov AR13,R7
dhl         uint leftos;            // Left to send or process
dhl         uint cnt;               // No. of data to send
dhl         uint rlen;
dhl 
dhl         xdata uchar *dsrc;
dhl 
dhl         code uchar *psrc;       // Source is in pinfo
dhl         uchar df;
dhl         uchar c;
dhl 
dhl         psrc=pinfo->pweb;
dhl         leftos=pinfo->weblen;
dco @4:1e u:2  mov R6,?gendyn_html_pinfo
dco @4:20 u:2  mov R7,?gendyn_html_pinfo+1
dco @4:22 u:2  mov A,#4
dco @4:24 u:1  add A,R7
dco @4:25 u:1  mov R7,A
dco @4:26 u:1  clr A
dco @4:27 u:1  addc A,R6
dco @4:28 u:1  mov R6,A
dco @4:29 u:2  mov DPH,R6
dco @4:2b u:2  mov DPL,R7
dco @4:2d u:3  lcall __ld_dptr_r67
dtx  ; variable 'leftos' assigned to register 'B1_RW1415'
dco @4:30 u:2  mov AR14,R6
dco @4:32 u:2  mov AR15,R7
dhl         df=pinfo->dyna_flag;
dco @4:34 u:2  mov R6,?gendyn_html_pinfo
dco @4:36 u:2  mov R7,?gendyn_html_pinfo+1
dco @4:38 u:1  inc R7
dco @4:39 u:1  mov A,R7
dco @4:3a u:2  jnz ?__1
dco @4:3c u:1  inc R6
dtx ?__1:
dco @4:3d u:3  mov DPH,AR6
dco @4:40 u:3  mov DPL,AR7
dco @4:43 u:1  movx A,@DPTR
dco @4:44 u:1  mov R7,A
dtx  ; variable 'df' allocated as 'auto'
dco @4:45 u:2  mov ?gendyn_html_df,R7
dtx  ; variable 'cnt' assigned to register 'B1_RW1011'
dhl         cnt=0;
dco @4:47 u:1  clr A
dco @4:48 u:2  mov AR10,A
dco @4:4a u:2  mov AR11,A
dco @4:4c u:3  ljmp ?8
dtx ?7:
dhl         while(leftos){
dco @4:4f u:3  mov DPH,AR12
dco @4:52 u:3  mov DPL,AR13
dco @4:55 u:1  clr A
dco @4:56 u:1  movc A,@A+DPTR
dco @4:57 u:1  mov R7,A
dtx  ; variable 'c' assigned to register 'B '
dco @4:58 u:2  mov B,R7
dhl                 c=*psrc;
dhl                 psrc++;
dco @4:5a u:2  inc AR13
dco @4:5c u:2  mov A,AR13
dco @4:5e u:2  jnz ?_1
dco @4:60 u:2  inc AR12
dtx ?_1:
dhl                 leftos--;
dco @4:62 u:2  mov A,AR15
dco @4:64 u:2  dec AR15
dco @4:66 u:2  jnz ?_2
dco @4:68 u:2  dec AR14
dtx ?_2:
dhl                 if(df && c==255){       // Dynamic Sentinel
dco @4:6a u:2  mov A,?gendyn_html_df
dco @4:6c u:2  jnz ?_3
dco @4:6e u:3  ljmp ?10
dtx ?_3:
dco @4:71 u:2  mov A,#255
dco @4:73 u:2  xrl A,B
dco @4:75 u:2  jz ?_4
dco @4:77 u:3  ljmp ?10
dtx ?_4:
dtx 
dco @4:7a u:2  mov R6,AR12
dco @4:7c u:2  mov R7,AR13
dco @4:7e u:2  mov DPH,R6
dco @4:80 u:2  mov DPL,R7
dco @4:82 u:3  lcall __ldc_dptr_r45
dtx  ; variable 'dsrc' assigned to register 'RW45'
dhl 
dhl                         dsrc= (xdata uchar*)(*(code uint*)psrc);
dhl                         rlen=0;
dco @4:85 u:1  clr A
dco @4:86 u:1  mov R0,A
dco @4:87 u:1  mov R1,A
dtx  ; variable 'rlen' assigned to register 'RW01'
dco @4:88 u:2  sjmp ?13
dtx ?12:
dhl                         while(*dsrc++) rlen++;  // Calc. Stringlen of variable          
dco @4:8a u:1  inc R1
dco @4:8b u:1  mov A,R1
dco @4:8c u:2  jnz ?__2
dco @4:8e u:1  inc R0
dtx ?__2:
dtx ?13:
dtx 
dco @4:8f u:2  mov DPH,R4
dco @4:91 u:2  mov DPL,R5
dco @4:93 u:2  mov R6,DPH
dco @4:95 u:2  mov R7,DPL
dco @4:97 u:2  mov A,#1
dco @4:99 u:1  add A,R7
dco @4:9a u:1  mov R5,A
dco @4:9b u:1  clr A
dco @4:9c u:1  addc A,R6
dco @4:9d u:1  mov R4,A
dco @4:9e u:1  movx A,@DPTR
dco @4:9f u:1  mov R7,A
dco @4:a0 u:2  jnz ?12
dhl 
dhl                         if(rlen>MAX_TX) rlen=MAX_TX;    // Clip too long variables to max. segment siz
dco @4:a2 u:2  mov R6,#0
dco @4:a4 u:2  mov R7,#100
dco @4:a6 u:1  setb C
dco @4:a7 u:1  mov A,R1
dco @4:a8 u:1  subb A,R7
dco @4:a9 u:1  mov A,R0
dco @4:aa u:1  subb A,R6
dco @4:ab u:2  jc ?15
dtx 
dco @4:ad u:2  mov R0,#0
dco @4:af u:2  mov R1,#100
dtx ?15:
dhl 
dhl                         if(rlen+cnt>MAX_TX){    // Current data + Variable: Too much!
dco @4:b1 u:2  mov A,AR11
dco @4:b3 u:1  add A,R1
dco @4:b4 u:1  mov R3,A
dco @4:b5 u:2  mov A,AR10
dco @4:b7 u:1  addc A,R0
dco @4:b8 u:1  mov R2,A
dco @4:b9 u:2  mov R6,#0
dco @4:bb u:2  mov R7,#100
dco @4:bd u:1  setb C
dco @4:be u:1  mov A,R3
dco @4:bf u:1  subb A,R7
dco @4:c0 u:1  mov A,R2
dco @4:c1 u:1  subb A,R6
dco @4:c2 u:2  jc ?17
dtx 
dco @4:c4 u:2  mov A,#255
dco @4:c6 u:2  add A,AR13
dco @4:c8 u:2  mov AR13,A
dco @4:ca u:2  mov A,#255
dco @4:cc u:2  addc A,AR12
dco @4:ce u:2  mov AR12,A
dhl                                 psrc--;         // Wind back HTML-Template and 
dhl                                 leftos++;       // use a new segment...
dco @4:d0 u:2  inc AR15
dco @4:d2 u:2  mov A,AR15
dco @4:d4 u:2  jnz ?_8
dco @4:d6 u:2  inc AR14
dtx ?_8:
dhl                                 break;          // Exit for now
dco @4:d8 u:3  ljmp ?9
dtx ?17:
dhl                         }
dhl 
dhl                         dsrc= (xdata uchar*)(*(code uint*)psrc);
dco @4:db u:2  mov R6,AR12
dco @4:dd u:2  mov R7,AR13
dco @4:df u:2  mov DPH,R6
dco @4:e1 u:2  mov DPL,R7
dco @4:e3 u:3  lcall __ldc_dptr_r23
dtx  ; variable 'dsrc' assigned to register 'RW23'
dhl                         psrc+=2;        // Eat Address from Template
dco @4:e6 u:2  mov A,#2
dco @4:e8 u:2  add A,AR13
dco @4:ea u:2  mov AR13,A
dco @4:ec u:1  clr A
dco @4:ed u:2  addc A,AR12
dco @4:ef u:2  mov AR12,A
dhl                         leftos-=2;
dco @4:f1 u:2  mov A,#254
dco @4:f3 u:2  add A,AR15
dco @4:f5 u:2  mov AR15,A
dco @4:f7 u:2  mov A,#255
dco @4:f9 u:2  addc A,AR14
dco @4:fb u:2  mov AR14,A
dco @4:fd u:2  sjmp ?20
dtx ?19:
dhl 
dhl                         // Insert Var. string in HTML
dhl                         while(rlen--){
dco @4:ff u:2  mov DPH,R2
dco @4:101 u:2  mov DPL,R3
dco @4:103 u:2  mov R6,DPH
dco @4:105 u:2  mov R7,DPL
dco @4:107 u:2  mov A,#1
dco @4:109 u:1  add A,R7
dco @4:10a u:1  mov R3,A
dco @4:10b u:1  clr A
dco @4:10c u:1  addc A,R6
dco @4:10d u:1  mov R2,A
dco @4:10e u:1  movx A,@DPTR
dco @4:10f u:1  mov R7,A
dtx  ; variable 'c' assigned to register 'R7'
dhl                                 c=*dsrc++;
dhl                                 *pbuf=c;
dco @4:110 u:3  mov DPH,AR8
dco @4:113 u:3  mov DPL,AR9
dco @4:116 u:1  mov A,R7
dco @4:117 u:1  movx @DPTR,A
dhl                                 pbuf++;
dco @4:118 u:2  inc AR9
dco @4:11a u:2  mov A,AR9
dco @4:11c u:2  jnz ?_9
dco @4:11e u:2  inc AR8
dtx ?_9:
dhl                                 cnt++;
dco @4:120 u:2  inc AR11
dco @4:122 u:2  mov A,AR11
dco @4:124 u:2  jnz ?_10
dco @4:126 u:2  inc AR10
dtx ?_10:
dhl                         }                       
dtx ?20:
dtx 
dco @4:128 u:2  mov R4,AR0
dco @4:12a u:2  mov R5,AR1
dco @4:12c u:2  mov A,#255
dco @4:12e u:1  add A,R5
dco @4:12f u:1  mov R1,A
dco @4:130 u:2  mov A,#255
dco @4:132 u:1  addc A,R4
dco @4:133 u:1  mov R0,A
dco @4:134 u:1  mov A,R4
dco @4:135 u:1  orl A,R5
dco @4:136 u:2  jnz ?19
dhl 
dhl 
dhl                 }else{
dco @4:138 u:2  sjmp ?11
dtx ?10:
dtx 
dco @4:13a u:2  mov R7,B
dco @4:13c u:3  mov DPH,AR8
dco @4:13f u:3  mov DPL,AR9
dco @4:142 u:1  mov A,R7
dco @4:143 u:1  movx @DPTR,A
dhl                         *pbuf=c;
dhl                         pbuf++;
dco @4:144 u:2  inc AR9
dco @4:146 u:2  mov A,AR9
dco @4:148 u:2  jnz ?_12
dco @4:14a u:2  inc AR8
dtx ?_12:
dhl                         cnt++;
dco @4:14c u:2  inc AR11
dco @4:14e u:2  mov A,AR11
dco @4:150 u:2  jnz ?_13
dco @4:152 u:2  inc AR10
dtx ?_13:
dhl                 }
dtx ?11:
dhl                 
dhl                 if(cnt==MAX_TX) break;  // Buffer full
dco @4:154 u:2  mov R6,AR10
dco @4:156 u:2  mov R7,AR11
dco @4:158 u:1  mov A,R7
dco @4:159 u:2  xrl A,#100
dco @4:15b u:1  orl A,R6
dtx 
dco @4:15c u:2  jz ?9
dhl         }
dtx ?8:
dtx 
dco @4:15e u:2  mov A,AR14
dco @4:160 u:2  orl A,AR15
dco @4:162 u:2  jz ?_15
dco @4:164 u:3  ljmp ?7
dtx ?_15:
dtx ?9:
dhl 
dhl         pinfo->pweb=psrc;
dco @4:167 u:2  mov R6,?gendyn_html_pinfo
dco @4:169 u:2  mov R7,?gendyn_html_pinfo+1
dco @4:16b u:2  mov A,#2
dco @4:16d u:1  add A,R7
dco @4:16e u:1  mov R3,A
dco @4:16f u:1  clr A
dco @4:170 u:1  addc A,R6
dco @4:171 u:1  mov R2,A
dco @4:172 u:2  mov R6,AR12
dco @4:174 u:2  mov R7,AR13
dco @4:176 u:2  mov DPH,R2
dco @4:178 u:2  mov DPL,R3
dco @4:17a u:3  lcall __st_dptr_r67
dhl         pinfo->weblen=leftos;
dco @4:17d u:2  mov R6,?gendyn_html_pinfo
dco @4:17f u:2  mov R7,?gendyn_html_pinfo+1
dco @4:181 u:2  mov A,#4
dco @4:183 u:1  add A,R7
dco @4:184 u:1  mov R3,A
dco @4:185 u:1  clr A
dco @4:186 u:1  addc A,R6
dco @4:187 u:1  mov R2,A
dco @4:188 u:2  mov R6,AR14
dco @4:18a u:2  mov R7,AR15
dco @4:18c u:2  mov DPH,R2
dco @4:18e u:2  mov DPL,R3
dco @4:190 u:3  lcall __st_dptr_r67
dhl 
dhl         return cnt;
dco @4:193 u:2  mov R6,AR10
dco @4:195 u:2  mov R7,AR11
dco @4:197 u:1  ret
dtx ; end of function gendyn_html
dtx ; used: R01234567 BR01234567 DPTR ACC PSW B locals:3 bytes
dtx 
dtx  .export _poll_webserver ; unsigned int poll_webserver(void)
dtx  .hide
dtx  .show
dtx 
dtx  .segment __poll_webserver
dtx _poll_webserver: ; unsigned int poll_webserver(void)
dhl }
dhl 
dhl 
dhl /**********************************************************************************
dhl *  poll_webserver()
dhl **********************************************************************************/
dhl uint poll_webserver(void){
dco @c:0 u:3  lcall _poll_net
dtx  ; variable 'res' allocated as 'auto'
dco @c:3 u:2  mov ?poll_webserver_res,R6
dco @c:5 u:2  mov ?poll_webserver_res+1,R7
dhl         uint res;
dhl         uint i;
dhl         uchar uci,c;
dhl         uchar sock,state;
dhl         xdata HTTP_INFO *pinfo;
dhl 
dhl         uint sendlen;           // Temp. Len
dhl         xdata uchar *pbuf;      // Temp. Buffer
dhl         
dhl         res=poll_net();
dhl 
dhl         // First check if a socket is pending
dhl         if(!res && csock!=0xFF && http_info[csock].html_state==3 &&  !notready_socket_tcp(csock,RDY_4_
dco @c:7 u:2  mov A,?poll_webserver_res
dco @c:9 u:2  orl A,?poll_webserver_res+1
dco @c:b u:2  jz ?_16
dco @c:d u:3  ljmp ?27
dtx ?_16:
dco @c:10 u:3  mov DPTR,#_csock
dco @c:13 u:1  movx A,@DPTR
dco @c:14 u:1  mov R3,A
dco @c:15 u:1  cpl A
dco @c:16 u:2  jnz ?_17
dco @c:18 u:3  ljmp ?27
dtx ?_17:
dco @c:1b u:2  mov R7,AR3
dco @c:1d u:1  clr A
dco @c:1e u:1  mov R6,A
dco @c:1f u:1  mov R4,A
dco @c:20 u:2  mov R5,#6
dco @c:22 u:3  lcall __mul_i2
dco @c:25 u:2  mov R4,#((_http_info)>>8)&255
dco @c:27 u:2  mov R5,#(_http_info)&255
dco @c:29 u:1  mov A,R5
dco @c:2a u:1  add A,R7
dco @c:2b u:1  mov R7,A
dco @c:2c u:1  mov A,R4
dco @c:2d u:1  addc A,R6
dco @c:2e u:1  mov R6,A
dco @c:2f u:3  mov DPH,AR6
dco @c:32 u:3  mov DPL,AR7
dco @c:35 u:1  movx A,@DPTR
dco @c:36 u:1  mov R7,A
dco @c:37 u:3  cjne R7,#3,?27
dco @c:3a u:2  mov R5,#1
dco @c:3c u:2  mov R7,AR3
dco @c:3e u:3  lcall _notready_socket_tcp
dco @c:41 u:1  mov A,R6
dco @c:42 u:1  orl A,R7
dco @c:43 u:2  jnz ?27
dtx 
dco @c:45 u:3  mov DPTR,#_csock
dco @c:48 u:1  movx A,@DPTR
dco @c:49 u:1  mov R7,A
dco @c:4a u:1  clr A
dco @c:4b u:1  mov R6,A
dco @c:4c u:1  add A,R7
dco @c:4d u:1  mov R7,A
dco @c:4e u:2  mov A,#245
dco @c:50 u:1  addc A,R6
dco @c:51 u:1  mov R6,A
dco @c:52 u:2  mov ?poll_webserver_res,R6
dco @c:54 u:2  mov ?poll_webserver_res+1,R7
dhl                 // Patch EVENT
dhl                 res=EVENT_TCP_DATARECEIVED+csock;
dhl                 rcv_len=0;
dco @c:56 u:3  mov DPTR,#_rcv_len
dco @c:59 u:1  clr A
dco @c:5a u:1  movx @DPTR,A
dco @c:5b u:1  inc DPTR
dco @c:5c u:1  movx @DPTR,A
dhl                 csock=0xFF;
dco @c:5d u:3  mov DPTR,#_csock
dco @c:60 u:2  mov A,#255
dco @c:62 u:1  movx @DPTR,A
dhl         }else if(res==EVENT_SOCKET_IDLETIMER){
dco @c:63 u:3  ljmp ?28
dtx ?27:
dtx 
dco @c:66 u:2  mov R6,?poll_webserver_res
dco @c:68 u:2  mov R7,?poll_webserver_res+1
dco @c:6a u:3  cjne R7,#0,?_21
dco @c:6d u:3  cjne R6,#212,?_21
dco @c:70 u:2  sjmp ?_22
dtx ?_21:
dco @c:72 u:3  ljmp ?29
dtx ?_22:
dtx  ; variable 'uci' allocated as 'auto'
dtx 
dco @c:75 u:1  clr A
dco @c:76 u:2  mov ?poll_webserver_uci,A
dtx ?31:
dhl                 for(uci=0;uci<MAX_SOCK;uci++){
dco @c:78 u:2  mov R7,?poll_webserver_uci
dco @c:7a u:1  clr A
dco @c:7b u:1  mov R6,A
dco @c:7c u:1  mov R4,A
dco @c:7d u:2  mov R5,#6
dco @c:7f u:3  lcall __mul_i2
dco @c:82 u:2  mov R4,#((_http_info)>>8)&255
dco @c:84 u:2  mov R5,#(_http_info)&255
dco @c:86 u:1  mov A,R5
dco @c:87 u:1  add A,R7
dco @c:88 u:1  mov R7,A
dco @c:89 u:1  mov A,R4
dco @c:8a u:1  addc A,R6
dco @c:8b u:1  mov R6,A
dco @c:8c u:3  mov DPH,AR6
dco @c:8f u:3  mov DPL,AR7
dco @c:92 u:1  movx A,@DPTR
dco @c:93 u:1  mov R5,A
dco @c:94 u:2  mov R7,#3
dco @c:96 u:1  clr C
dco @c:97 u:1  mov A,R5
dco @c:98 u:1  subb A,R7
dco @c:99 u:2  jc ?35
dco @c:9b u:2  mov R5,#1
dco @c:9d u:2  mov R7,?poll_webserver_uci
dco @c:9f u:3  lcall _notready_socket_tcp
dco @c:a2 u:1  mov A,R6
dco @c:a3 u:1  orl A,R7
dco @c:a4 u:2  jnz ?35
dhl                         if(http_info[uci].html_state>=3 &&  !notready_socket_tcp(uci,RDY_4_TX)){
dco @c:a6 u:2  mov R7,?poll_webserver_uci
dco @c:a8 u:1  clr A
dco @c:a9 u:1  mov R6,A
dco @c:aa u:1  add A,R7
dco @c:ab u:1  mov R7,A
dco @c:ac u:2  mov A,#245
dco @c:ae u:1  addc A,R6
dco @c:af u:1  mov R6,A
dco @c:b0 u:2  mov ?poll_webserver_res,R6
dco @c:b2 u:2  mov ?poll_webserver_res+1,R7
dhl                                 // Patch EVENT (simulate a received 0-size segment)
dhl                                 res=EVENT_TCP_DATARECEIVED+uci;
dhl                                 rcv_len=0;
dco @c:b4 u:3  mov DPTR,#_rcv_len
dco @c:b7 u:1  clr A
dco @c:b8 u:1  movx @DPTR,A
dco @c:b9 u:1  inc DPTR
dco @c:ba u:1  movx @DPTR,A
dhl                         }
dtx ?35:
dhl                 }
dco @c:bb u:2  inc ?poll_webserver_uci
dtx 
dco @c:bd u:2  mov A,#2
dco @c:bf u:2  xrl A,?poll_webserver_uci
dco @c:c1 u:2  jz ?_25
dco @c:c3 u:3  ljmp ?31
dtx ?_25:
dhl         }
dtx ?29:
dtx ?28:
dhl 
dhl         // Received a TCP_EVENT. Could indicate received data or a closure of the TCP socket
dhl         if(res>=0xF000){
dco @c:c6 u:2  mov R4,#240
dco @c:c8 u:2  mov R5,#0
dco @c:ca u:2  mov R6,?poll_webserver_res
dco @c:cc u:2  mov R7,?poll_webserver_res+1
dco @c:ce u:1  clr C
dco @c:cf u:1  mov A,R7
dco @c:d0 u:1  subb A,R5
dco @c:d1 u:1  mov A,R6
dco @c:d2 u:1  subb A,R4
dco @c:d3 u:2  jnc ?_26
dco @c:d5 u:3  ljmp ?37
dtx ?_26:
dtx 
dco @c:d8 u:2  mov R6,?poll_webserver_res
dco @c:da u:2  mov R7,?poll_webserver_res+1
dtx  ; variable 'sock' allocated as 'auto'
dco @c:dc u:2  mov ?poll_webserver_sock,R7
dhl                 sock=(uchar)res;        // isolate socket index
dhl 
dhl                 // Only process HTTP-Sockets!
dhl                 if(uc_socket[sock].local_port!=80) return res;
dco @c:de u:2  mov R7,?poll_webserver_sock
dco @c:e0 u:1  clr A
dco @c:e1 u:1  mov R6,A
dco @c:e2 u:1  mov R4,A
dco @c:e3 u:2  mov R5,#50
dco @c:e5 u:3  lcall __mul_i2
dco @c:e8 u:2  mov R4,#((_uc_socket+14)>>8)&255
dco @c:ea u:2  mov R5,#(_uc_socket+14)&255
dco @c:ec u:1  mov A,R5
dco @c:ed u:1  add A,R7
dco @c:ee u:1  mov R7,A
dco @c:ef u:1  mov A,R4
dco @c:f0 u:1  addc A,R6
dco @c:f1 u:1  mov R6,A
dco @c:f2 u:2  mov DPH,R6
dco @c:f4 u:2  mov DPL,R7
dco @c:f6 u:3  lcall __ld_dptr_r67
dco @c:f9 u:1  mov A,R7
dco @c:fa u:2  xrl A,#80
dco @c:fc u:2  jnz ?_27
dco @c:fe u:1  mov A,R6
dco @c:ff u:2  jz ?39
dtx ?_27:
dtx 
dco @c:101 u:2  mov R6,?poll_webserver_res
dco @c:103 u:2  mov R7,?poll_webserver_res+1
dco @c:105 u:3  ljmp ?26
dtx ?39:
dhl 
dhl                 pinfo=&http_info[sock]; // Pointer to HTTP_INFO for the current socket
dco @c:108 u:2  mov R7,?poll_webserver_sock
dco @c:10a u:1  clr A
dco @c:10b u:1  mov R6,A
dco @c:10c u:1  mov R4,A
dco @c:10d u:2  mov R5,#6
dco @c:10f u:3  lcall __mul_i2
dco @c:112 u:2  mov R4,#((_http_info)>>8)&255
dco @c:114 u:2  mov R5,#(_http_info)&255
dco @c:116 u:1  mov A,R5
dco @c:117 u:1  add A,R7
dco @c:118 u:1  mov R7,A
dco @c:119 u:1  mov A,R4
dco @c:11a u:1  addc A,R6
dco @c:11b u:1  mov R6,A
dtx  ; variable 'pinfo' allocated as 'auto'
dco @c:11c u:2  mov ?poll_webserver_pinfo,R6
dco @c:11e u:2  mov ?poll_webserver_pinfo+1,R7
dhl 
dhl                 state=pinfo->html_state;
dco @c:120 u:3  mov DPH,?poll_webserver_pinfo
dco @c:123 u:3  mov DPL,?poll_webserver_pinfo+1
dco @c:126 u:1  movx A,@DPTR
dco @c:127 u:1  mov R7,A
dtx  ; variable 'state' allocated as 'auto'
dco @c:128 u:2  mov ?poll_webserver_state,R7
dhl                 
dhl                 // *** RECEIVED DATA ***
dhl                 if((res&0xFF00)==EVENT_TCP_DATARECEIVED){
dco @c:12a u:2  mov R6,?poll_webserver_res
dco @c:12c u:2  mov R7,?poll_webserver_res+1
dco @c:12e u:2  mov R7,#0
dco @c:130 u:3  cjne R7,#0,?_29
dco @c:133 u:3  cjne R6,#245,?_29
dco @c:136 u:2  sjmp ?_30
dtx ?_29:
dco @c:138 u:3  ljmp ?41
dtx ?_30:
dtx 
dco @c:13b u:1  clr A
dco @c:13c u:1  mov R0,A
dco @c:13d u:1  mov R1,A
dtx  ; variable 'res' assigned to register 'RW01'
dhl #if 0 // Disabled (enable only for debugging)
dhl                         // Show request...
dhl                         for(i=0;i<rcv_len;i++){
dhl                                 c=rcv_buf[i];
dhl                                 if(c=='\r') putsl("<CR>");
dhl                                 else if(c=='\n') puts("<LF>");
dhl                                 else putchar(c);
dhl                         }
dhl #endif
dhl                         res=0;  // This is our new return EVENT (default: nothing)
dhl                         // Parse request
dhl                         for(i=0;i<rcv_len;i++){
dco @c:13e u:1  clr A
dco @c:13f u:1  mov R2,A
dco @c:140 u:1  mov R3,A
dtx  ; variable 'i' assigned to register 'RW23'
dco @c:141 u:3  ljmp ?46
dtx ?43:
dtx 
dco @c:144 u:2  mov R6,#((_rcv_buf)>>8)&255
dco @c:146 u:2  mov R7,#(_rcv_buf)&255
dco @c:148 u:1  mov A,R7
dco @c:149 u:1  add A,R3
dco @c:14a u:1  mov R7,A
dco @c:14b u:1  mov A,R6
dco @c:14c u:1  addc A,R2
dco @c:14d u:1  mov R6,A
dco @c:14e u:3  mov DPH,AR6
dco @c:151 u:3  mov DPL,AR7
dco @c:154 u:1  movx A,@DPTR
dco @c:155 u:1  mov R7,A
dtx  ; variable 'c' assigned to register 'B '
dco @c:156 u:2  mov B,R7
dhl                                 c=rcv_buf[i];
dhl 
dhl                                 switch(state){
dco @c:158 u:2  mov A,?poll_webserver_state
dco @c:15a u:2  jz ?49
dco @c:15c u:2  mov R7,?poll_webserver_state
dco @c:15e u:1  mov A,R7
dco @c:15f u:2  xrl A,#1
dco @c:161 u:2  jnz ?_32
dco @c:163 u:3  ljmp ?52
dtx ?_32:
dco @c:166 u:2  mov R7,?poll_webserver_state
dco @c:168 u:1  mov A,R7
dco @c:169 u:2  xrl A,#2
dco @c:16b u:2  jnz ?_33
dco @c:16d u:3  ljmp ?55
dtx ?_33:
dco @c:170 u:3  ljmp ?47
dtx 
dtx ?49:
dhl                                 case 0:
dhl                                         if(c=='G' && i==0){     // Assume a GET
dco @c:173 u:2  mov A,#71
dco @c:175 u:2  xrl A,B
dco @c:177 u:2  jz ?_34
dco @c:179 u:3  ljmp ?48
dtx ?_34:
dco @c:17c u:1  mov A,R2
dco @c:17d u:1  orl A,R3
dco @c:17e u:2  jz ?_35
dco @c:180 u:3  ljmp ?48
dtx ?_35:
dtx 
dco @c:183 u:3  mov ?poll_webserver_state,#1
dhl                                                 state=1;
dhl                                                 // Emit a HTTP-Request
dhl                                                 res=EVENT_HTTP_REQUEST+sock;
dco @c:186 u:2  mov R7,?poll_webserver_sock
dco @c:188 u:1  clr A
dco @c:189 u:1  mov R6,A
dco @c:18a u:1  add A,R7
dco @c:18b u:1  mov R1,A
dco @c:18c u:2  mov A,#144
dco @c:18e u:1  addc A,R6
dco @c:18f u:1  mov R0,A
dhl                 
dhl                                                 // Set Default Reply to NotFound
dhl                                                 pinfo->pweb=html_notfound;
dco @c:190 u:2  mov R6,?poll_webserver_pinfo
dco @c:192 u:2  mov R7,?poll_webserver_pinfo+1
dco @c:194 u:2  mov A,#2
dco @c:196 u:1  add A,R7
dco @c:197 u:1  mov R5,A
dco @c:198 u:1  clr A
dco @c:199 u:1  addc A,R6
dco @c:19a u:1  mov R4,A
dco @c:19b u:2  mov R6,#((_html_notfound)>>8)&255
dco @c:19d u:2  mov R7,#(_html_notfound)&255
dco @c:19f u:2  mov DPH,R4
dco @c:1a1 u:2  mov DPL,R5
dco @c:1a3 u:3  lcall __st_dptr_r67
dhl                                                 pinfo->weblen=sizeof(html_notfound);
dco @c:1a6 u:2  mov R6,?poll_webserver_pinfo
dco @c:1a8 u:2  mov R7,?poll_webserver_pinfo+1
dco @c:1aa u:2  mov A,#4
dco @c:1ac u:1  add A,R7
dco @c:1ad u:1  mov R5,A
dco @c:1ae u:1  clr A
dco @c:1af u:1  addc A,R6
dco @c:1b0 u:1  mov R4,A
dco @c:1b1 u:2  mov R6,#0
dco @c:1b3 u:2  mov R7,#229
dco @c:1b5 u:2  mov DPH,R4
dco @c:1b7 u:2  mov DPL,R5
dco @c:1b9 u:3  lcall __st_dptr_r67
dhl                                                 pinfo->dyna_flag=1; // With interpretation! (because H
dco @c:1bc u:2  mov R6,?poll_webserver_pinfo
dco @c:1be u:2  mov R7,?poll_webserver_pinfo+1
dco @c:1c0 u:1  inc R7
dco @c:1c1 u:1  mov A,R7
dco @c:1c2 u:2  jnz ?__3
dco @c:1c4 u:1  inc R6
dtx ?__3:
dco @c:1c5 u:3  mov DPH,AR6
dco @c:1c8 u:3  mov DPL,AR7
dco @c:1cb u:2  mov A,#1
dco @c:1cd u:1  movx @DPTR,A
dhl                                                 
dhl                                         }
dco @c:1ce u:2  sjmp ?48
dtx ?52:
dhl                                         break;
dhl                                 case 1: // Wait for a EOL after chars were found
dhl                                         if(c=='\n') state=2;
dco @c:1d0 u:2  mov A,#10
dco @c:1d2 u:2  xrl A,B
dco @c:1d4 u:2  jnz ?48
dtx 
dco @c:1d6 u:3  mov ?poll_webserver_state,#2
dhl                                         break;
dco @c:1d9 u:2  sjmp ?48
dtx ?55:
dhl                                 case 2: // Rec. new line, CR LF marks end of HTTP_Request
dhl                                         if(c=='\n') {
dco @c:1db u:2  mov A,#10
dco @c:1dd u:2  xrl A,B
dco @c:1df u:2  jnz ?56
dtx 
dco @c:1e1 u:3  mov ?poll_webserver_state,#3
dhl                                                 state=3;        // CR LF: End of Request
dhl                                         }else {
dco @c:1e4 u:2  sjmp ?57
dtx ?56:
dtx 
dco @c:1e6 u:2  mov R7,B
dco @c:1e8 u:1  mov A,R7
dco @c:1e9 u:2  xrl A,#13
dco @c:1eb u:2  jz ?58
dhl                                                 if(c!='\r') state=1;    // ignore all visible chars
dco @c:1ed u:3  mov ?poll_webserver_state,#1
dtx ?58:
dhl                                         }
dtx ?57:
dhl                                 } // switch
dtx ?47:
dtx ?48:
dhl                         } // for
dco @c:1f0 u:1  inc R3
dco @c:1f1 u:1  mov A,R3
dco @c:1f2 u:2  jnz ?__4
dco @c:1f4 u:1  inc R2
dtx ?__4:
dtx ?46:
dtx 
dco @c:1f5 u:3  mov DPTR,#_rcv_len
dco @c:1f8 u:3  lcall __ld_dptr_r67
dco @c:1fb u:1  clr C
dco @c:1fc u:1  mov A,R3
dco @c:1fd u:1  subb A,R7
dco @c:1fe u:1  mov A,R2
dco @c:1ff u:1  subb A,R6
dco @c:200 u:2  jnc ?_39
dco @c:202 u:3  ljmp ?43
dtx ?_39:
dhl 
dhl                         // Inform User about page request
dhl                         if(res) {
dco @c:205 u:1  mov A,R0
dco @c:206 u:1  orl A,R1
dco @c:207 u:2  jz ?60
dtx 
dco @c:209 u:2  mov R7,?poll_webserver_state
dco @c:20b u:3  mov DPH,?poll_webserver_pinfo
dco @c:20e u:3  mov DPL,?poll_webserver_pinfo+1
dco @c:211 u:1  mov A,R7
dco @c:212 u:1  movx @DPTR,A
dhl                                 pinfo->html_state=state;        // Keep state
dhl                                 return res;                     // And return (0 or REQUEST) to the us
dco @c:213 u:2  mov R6,AR0
dco @c:215 u:2  mov R7,AR1
dco @c:217 u:3  ljmp ?26
dtx ?60:
dhl                         }
dhl 
dhl                         // Try to send data for states 3 and 4
dhl                         if(state>=3){
dco @c:21a u:2  mov R5,#3
dco @c:21c u:2  mov R7,?poll_webserver_state
dco @c:21e u:1  clr C
dco @c:21f u:1  mov A,R7
dco @c:220 u:1  subb A,R5
dco @c:221 u:2  jnc ?_41
dco @c:223 u:3  ljmp ?62
dtx ?_41:
dtx 
dco @c:226 u:2  mov R5,#1
dco @c:228 u:2  mov R7,?poll_webserver_sock
dco @c:22a u:3  lcall _notready_socket_tcp
dco @c:22d u:1  mov A,R6
dco @c:22e u:1  orl A,R7
dco @c:22f u:2  jz ?_42
dco @c:231 u:3  ljmp ?64
dtx ?_42:
dhl                                 if(!notready_socket_tcp(sock,RDY_4_TX)){
dco @c:234 u:3  mov ?poll_webserver_state,#3
dhl                                         state=3;
dhl                                         if(pinfo->weblen){      // There is still something to send
dco @c:237 u:2  mov R6,?poll_webserver_pinfo
dco @c:239 u:2  mov R7,?poll_webserver_pinfo+1
dco @c:23b u:2  mov A,#4
dco @c:23d u:1  add A,R7
dco @c:23e u:1  mov R7,A
dco @c:23f u:1  clr A
dco @c:240 u:1  addc A,R6
dco @c:241 u:1  mov R6,A
dco @c:242 u:2  mov DPH,R6
dco @c:244 u:2  mov DPL,R7
dco @c:246 u:3  lcall __ld_dptr_r67
dco @c:249 u:1  mov A,R6
dco @c:24a u:1  orl A,R7
dco @c:24b u:2  jz ?66
dtx 
dco @c:24d u:3  lcall _allocate_tx_buf
dtx  ; variable 'pbuf' allocated as 'auto'
dco @c:250 u:2  mov ?poll_webserver_pbuf,R6
dco @c:252 u:2  mov ?poll_webserver_pbuf+1,R7
dhl                                                 pbuf=allocate_tx_buf(); // Allocate a buffer
dhl                                                 sendlen=gendyn_html(pinfo,pbuf); // Fill Buffer
dco @c:254 u:2  mov R4,?poll_webserver_pbuf
dco @c:256 u:2  mov R5,?poll_webserver_pbuf+1
dco @c:258 u:2  mov R6,?poll_webserver_pinfo
dco @c:25a u:2  mov R7,?poll_webserver_pinfo+1
dco @c:25c u:3  lcall _gendyn_html
dtx  ; variable 'sendlen' assigned to register 'RW67'
dhl                                                 send_socket_tcp(sock, pbuf, sendlen); // Send buffer (
dco @c:25f u:2  mov R2,AR6
dco @c:261 u:2  mov R3,AR7
dco @c:263 u:2  mov R4,?poll_webserver_pbuf
dco @c:265 u:2  mov R5,?poll_webserver_pbuf+1
dco @c:267 u:2  mov R7,?poll_webserver_sock
dco @c:269 u:3  lcall _send_socket_tcp
dhl                                                 csock=sock;     // Could send something, retry soon!
dco @c:26c u:2  mov R7,?poll_webserver_sock
dco @c:26e u:3  mov DPTR,#_csock
dco @c:271 u:1  mov A,R7
dco @c:272 u:1  movx @DPTR,A
dhl                                         }else{ // Manually close only dynamic Pages...
dco @c:273 u:2  sjmp ?65
dtx ?66:
dtx 
dco @c:275 u:3  mov ?poll_webserver_state,#4
dhl                                                 state=4;        // Waiting for close could block other
dhl                                                 if(!notready_socket_tcp(sock,RDY_4_CLOSE)){
dco @c:278 u:1  clr A
dco @c:279 u:1  mov R5,A
dco @c:27a u:2  mov R7,?poll_webserver_sock
dco @c:27c u:3  lcall _notready_socket_tcp
dco @c:27f u:1  mov A,R6
dco @c:280 u:1  orl A,R7
dco @c:281 u:2  jnz ?65
dtx 
dco @c:283 u:1  clr A
dco @c:284 u:2  mov ?poll_webserver_state,A
dhl                                                         state=0;
dhl                                                         close_socket_tcp(sock);
dco @c:286 u:2  mov R7,?poll_webserver_sock
dco @c:288 u:3  lcall _close_socket_tcp
dhl                                                 }
dco @c:28b u:2  sjmp ?65
dtx ?64:
dhl                                         }
dhl 
dhl                                 }else{ // !notready
dco @c:28d u:3  mov ?poll_webserver_state,#4
dhl                                         state=4; // Mark socket as pending, try in 500 msec again
dhl                                 }
dtx ?65:
dhl 
dhl                         }
dtx ?62:
dhl                         pinfo->html_state=state;        // Keep state
dco @c:290 u:2  mov R7,?poll_webserver_state
dco @c:292 u:3  mov DPH,?poll_webserver_pinfo
dco @c:295 u:3  mov DPL,?poll_webserver_pinfo+1
dco @c:298 u:1  mov A,R7
dco @c:299 u:1  movx @DPTR,A
dhl                         return 0;                       // Ignore Webserver maintained events
dco @c:29a u:1  clr A
dco @c:29b u:1  mov R6,A
dco @c:29c u:1  mov R7,A
dco @c:29d u:2  sjmp ?26
dtx ?41:
dhl 
dhl                 }else if(res>=0xF800){ // all Events >=0xF800 close TCP Connections.
dco @c:29f u:2  mov R4,#248
dco @c:2a1 u:2  mov R5,#0
dco @c:2a3 u:2  mov R6,?poll_webserver_res
dco @c:2a5 u:2  mov R7,?poll_webserver_res+1
dco @c:2a7 u:1  clr C
dco @c:2a8 u:1  mov A,R7
dco @c:2a9 u:1  subb A,R5
dco @c:2aa u:1  mov A,R6
dco @c:2ab u:1  subb A,R4
dco @c:2ac u:2  jc ?70
dtx 
dco @c:2ae u:3  mov DPH,?poll_webserver_pinfo
dco @c:2b1 u:3  mov DPL,?poll_webserver_pinfo+1
dco @c:2b4 u:1  clr A
dco @c:2b5 u:1  movx @DPTR,A
dhl                         pinfo->html_state=0;    // ALL other TCP_EVENTS close the socket (ensured by d
dhl                         return 0;               // Ignore this Event, socket is maintained by webserve
dco @c:2b6 u:1  clr A
dco @c:2b7 u:1  mov R6,A
dco @c:2b8 u:1  mov R7,A
dco @c:2b9 u:2  sjmp ?26
dtx ?70:
dhl                 }
dhl         }
dtx ?37:
dhl         return res;
dco @c:2bb u:2  mov R6,?poll_webserver_res
dco @c:2bd u:2  mov R7,?poll_webserver_res+1
dtx ?26:
dco @c:2bf u:1  ret
dtx ; end of function poll_webserver
dtx ; used: R01234567 BR01234567 DPTR ACC PSW B locals:8 bytes
dtx 
dtx  .export _webpage_name ; xdata unsigned char *webpage_name(void)
dtx  .segment _webpage_name_formal_near, size 0, fill, notext, sclass dram
dtx  .segment _webpage_name_local_near, size 0, fill, notext, sclass dram
dtx  .sgraph _webpage_name_formal_near, _webpage_name_local_near, __webpage_name
dtx 
dtx  .segment __webpage_name
dtx _webpage_name: ; (leaf function) xdata unsigned char *webpage_name(void)
dhl }
dhl 
dhl /**********************************************************************************
dhl *  webpage_name(): Return the Name of the requested page. 
dhl *
dhl * Attention: Maybe called only ONCE, because terminates URL-String
dhl **********************************************************************************/
dhl xdata uchar * webpage_name(void){
dco @f:0 u:2  mov R4,#((_rcv_buf+5)>>8)&255
dco @f:2 u:2  mov R5,#(_rcv_buf+5)&255
dtx  ; variable 'pc' assigned to register 'RW45'
dhl         uchar c;
dhl         xdata uchar *pc=rcv_buf+5;      // Kill GET slash (5 chars)
dhl         web_args=0;             // Assume NO Arguments
dco @f:4 u:1  clr A
dco @f:5 u:1  mov R6,A
dco @f:6 u:1  mov R7,A
dco @f:7 u:3  mov DPTR,#_web_args
dco @f:a u:3  lcall __st_dptr_r67
dhl         rcv_buf[MAX_RX-1]=0;    // Prevent Buffer overread
dco @f:d u:3  mov DPTR,#_rcv_buf+1399
dco @f:10 u:1  clr A
dco @f:11 u:1  movx @DPTR,A
dhl         for(;;){
dtx ?74:
dtx 
dco @f:12 u:3  mov DPH,AR4
dco @f:15 u:3  mov DPL,AR5
dco @f:18 u:1  movx A,@DPTR
dco @f:19 u:1  mov R3,A
dtx  ; variable 'c' assigned to register 'R3'
dhl                 c=*pc;
dhl                 if(c=='?') {
dco @f:1a u:3  cjne R3,#63,?78
dtx 
dco @f:1d u:2  mov A,#1
dco @f:1f u:1  add A,R5
dco @f:20 u:1  mov R7,A
dco @f:21 u:1  clr A
dco @f:22 u:1  addc A,R4
dco @f:23 u:1  mov R6,A
dco @f:24 u:3  mov DPTR,#_web_args
dco @f:27 u:3  lcall __st_dptr_r67
dhl                         web_args=pc+1;
dhl                         break;
dco @f:2a u:2  sjmp ?76
dtx ?78:
dhl                 }else  if(c<=' ') break;
dco @f:2c u:2  mov R7,#32
dco @f:2e u:1  setb C
dco @f:2f u:1  mov A,R3
dco @f:30 u:1  subb A,R7
dtx 
dco @f:31 u:2  jc ?76
dhl                 pc++;
dco @f:33 u:1  inc R5
dco @f:34 u:1  mov A,R5
dco @f:35 u:2  jnz ?__5
dco @f:37 u:1  inc R4
dtx ?__5:
dhl         }
dco @f:38 u:2  sjmp ?74
dtx ?76:
dhl         *pc=0;
dco @f:3a u:3  mov DPH,AR4
dco @f:3d u:3  mov DPL,AR5
dco @f:40 u:1  clr A
dco @f:41 u:1  movx @DPTR,A
dhl         return rcv_buf+5;
dco @f:42 u:2  mov R6,#((_rcv_buf+5)>>8)&255
dco @f:44 u:2  mov R7,#(_rcv_buf+5)&255
dco @f:46 u:1  ret
dtx ; end of function webpage_name
dtx ; used: R---34567 BR-------- DPTR ACC PSW
dtx 
dtx  .export _url_getarg_no ; unsigned char url_getarg_no(void)
dtx  .segment _url_getarg_no_formal_near, size 0, fill, notext, sclass dram
dtx  .segment _url_getarg_no_local_near, size 0, fill, notext, sclass dram
dtx  .sgraph _url_getarg_no_formal_near, _url_getarg_no_local_near, __url_getarg_no
dtx 
dtx  .segment __url_getarg_no
dtx _url_getarg_no: ; (leaf function) unsigned char url_getarg_no(void)
dhl }
dhl 
dhl /**********************************************************************************
dhl * uchar url_getarg_no(void)
dhl *
dhl * Will return the index No of an argument or 0 for none. The Value of an argument
dhl * can be retrieved with url_getarg_str();
dhl * All Arguments must be named A1 - A255 or a1-a255
dhl **********************************************************************************/
dhl uchar url_getarg_no(void){
dco @12:0 u:3  mov DPTR,#_web_args
dco @12:3 u:3  lcall __ld_dptr_r67
dco @12:6 u:1  mov A,R6
dco @12:7 u:1  orl A,R7
dco @12:8 u:2  jnz ?83
dhl         uchar ano;
dhl         uchar c;
dhl         if(!web_args) return 0;
dco @12:a u:1  clr A
dco @12:b u:1  mov R7,A
dco @12:c u:3  ljmp ?82
dtx ?83:
dhl         c=*web_args++;
dco @12:f u:3  mov DPTR,#_web_args
dco @12:12 u:3  lcall __ld_dptr_r45
dco @12:15 u:2  mov A,#1
dco @12:17 u:1  add A,R5
dco @12:18 u:1  mov R7,A
dco @12:19 u:1  clr A
dco @12:1a u:1  addc A,R4
dco @12:1b u:1  mov R6,A
dco @12:1c u:3  mov DPTR,#_web_args
dco @12:1f u:3  lcall __st_dptr_r67
dco @12:22 u:3  mov DPH,AR4
dco @12:25 u:3  mov DPL,AR5
dco @12:28 u:1  movx A,@DPTR
dtx  ; variable 'c' assigned to register 'R7'
dhl         if(c!='a' && c!='A') return 0;  // No Arg found!
dco @12:29 u:1  mov R7,A
dco @12:2a u:2  xrl A,#97
dco @12:2c u:2  jz ?85
dco @12:2e u:1  mov A,R7
dco @12:2f u:2  xrl A,#65
dco @12:31 u:2  jz ?85
dtx 
dco @12:33 u:1  clr A
dco @12:34 u:1  mov R7,A
dco @12:35 u:3  ljmp ?82
dtx ?85:
dhl         ano=0;
dco @12:38 u:1  clr A
dco @12:39 u:1  mov R3,A
dtx  ; variable 'ano' assigned to register 'R3'
dhl         for(;;){
dtx ?87:
dtx 
dco @12:3a u:3  mov DPTR,#_web_args
dco @12:3d u:3  lcall __ld_dptr_r45
dco @12:40 u:2  mov A,#1
dco @12:42 u:1  add A,R5
dco @12:43 u:1  mov R7,A
dco @12:44 u:1  clr A
dco @12:45 u:1  addc A,R4
dco @12:46 u:1  mov R6,A
dco @12:47 u:3  mov DPTR,#_web_args
dco @12:4a u:3  lcall __st_dptr_r67
dco @12:4d u:3  mov DPH,AR4
dco @12:50 u:3  mov DPL,AR5
dco @12:53 u:1  movx A,@DPTR
dco @12:54 u:1  mov R7,A
dco @12:55 u:2  mov A,#208
dco @12:57 u:1  add A,R7
dco @12:58 u:1  mov R5,A
dtx  ; variable 'c' assigned to register 'R5'
dhl                 c=(*web_args++)-'0';
dhl                 if(c>9) break;
dco @12:59 u:2  mov R7,#9
dco @12:5b u:1  setb C
dco @12:5c u:1  mov A,R5
dco @12:5d u:1  subb A,R7
dtx 
dco @12:5e u:2  jnc ?89
dhl                 ano*=10;
dco @12:60 u:2  mov R7,#10
dco @12:62 u:1  mov A,R3
dco @12:63 u:2  mov B,R7
dco @12:65 u:1  mul AB
dco @12:66 u:1  mov R7,A
dtx  ; variable 'ano' assigned to register 'R7'
dhl                 ano+=c;
dco @12:67 u:1  mov A,R5
dco @12:68 u:1  add A,R7
dco @12:69 u:1  mov R3,A
dhl         }               
dco @12:6a u:2  sjmp ?87
dtx ?89:
dhl         if(c!= ('='-'0')) return 0;     // Format error
dco @12:6c u:1  mov A,R5
dco @12:6d u:2  xrl A,#13
dco @12:6f u:2  jz ?93
dtx 
dco @12:71 u:1  clr A
dco @12:72 u:1  mov R7,A
dco @12:73 u:2  sjmp ?82
dtx ?93:
dhl         return ano;     
dco @12:75 u:2  mov R7,AR3
dtx ?82:
dco @12:77 u:1  ret
dtx ; end of function url_getarg_no
dtx ; used: R---34567 BR-------- DPTR ACC PSW B
dtx 
dtx  .export _url_getarg_str ; xdata unsigned char *url_getarg_str(void)
dtx  .segment _url_getarg_str_formal_near, size 0, fill, notext, sclass dram
dtx  .segment _url_getarg_str_local_near, size 0, fill, notext, sclass dram
dtx  .sgraph _url_getarg_str_formal_near, _url_getarg_str_local_near, __url_getarg_str
dtx 
dtx  .segment __url_getarg_str
dtx _url_getarg_str: ; (leaf function) xdata unsigned char *url_getarg_str(void)
dhl }
dhl 
dhl /**********************************************************************************
dhl * xdata uchar url_getarg_str(void)
dhl *
dhl * Will return the value of the last identified argument
dhl **********************************************************************************/
dhl xdata uchar *url_getarg_str(void){
dco @15:0 u:3  mov DPTR,#_web_args
dco @15:3 u:3  lcall __ld_dptr_r23
dtx  ; variable 'ret' assigned to register 'RW23'
dhl         xdata uchar *ret;
dhl          uchar c;
dhl         ret=web_args;
dhl         for(;;){
dtx ?98:
dtx 
dco @15:6 u:3  mov DPTR,#_web_args
dco @15:9 u:3  lcall __ld_dptr_r67
dco @15:c u:3  mov DPH,AR6
dco @15:f u:3  mov DPL,AR7
dco @15:12 u:1  movx A,@DPTR
dtx  ; variable 'c' assigned to register 'R5'
dhl                 c=*web_args;
dhl                 if(c=='&' || c<=' ') break;
dco @15:13 u:1  mov R5,A
dco @15:14 u:2  xrl A,#38
dco @15:16 u:2  jz ?104
dco @15:18 u:2  mov R7,#32
dco @15:1a u:1  setb C
dco @15:1b u:1  mov A,R5
dco @15:1c u:1  subb A,R7
dco @15:1d u:2  jnc ?102
dtx ?104:
dtx 
dco @15:1f u:2  sjmp ?100
dtx ?102:
dhl                 web_args++;     // Read over
dco @15:21 u:3  mov DPTR,#_web_args
dco @15:24 u:3  lcall __ld_dptr_r67
dco @15:27 u:1  inc R7
dco @15:28 u:1  mov A,R7
dco @15:29 u:2  jnz ?__6
dco @15:2b u:1  inc R6
dtx ?__6:
dco @15:2c u:3  mov DPTR,#_web_args
dco @15:2f u:3  lcall __st_dptr_r67
dhl         }               
dco @15:32 u:2  sjmp ?98
dtx ?100:
dhl         *web_args=0;    // Terminate string for this argument
dco @15:34 u:3  mov DPTR,#_web_args
dco @15:37 u:3  lcall __ld_dptr_r67
dco @15:3a u:3  mov DPH,AR6
dco @15:3d u:3  mov DPL,AR7
dco @15:40 u:1  clr A
dco @15:41 u:1  movx @DPTR,A
dhl         web_args++;     // and set to next Arg.
dco @15:42 u:3  mov DPTR,#_web_args
dco @15:45 u:3  lcall __ld_dptr_r67
dco @15:48 u:1  inc R7
dco @15:49 u:1  mov A,R7
dco @15:4a u:2  jnz ?__7
dco @15:4c u:1  inc R6
dtx ?__7:
dco @15:4d u:3  mov DPTR,#_web_args
dco @15:50 u:3  lcall __st_dptr_r67
dhl         return ret;
dco @15:53 u:2  mov R6,AR2
dco @15:55 u:2  mov R7,AR3
dco @15:57 u:1  ret
dtx ; end of function url_getarg_str
dtx ; used: R--23-567 BR-------- DPTR ACC PSW
dtx 
dtx  .export _webpage_bind ; void webpage_bind(unsigned char, code unsigned char *)
dtx  .segment _webpage_bind_formal_near, size 0, fill, notext, sclass dram
dtx  .segment _webpage_bind_local_near, size 0, fill, notext, sclass dram
dtx  .sgraph _webpage_bind_formal_near, _webpage_bind_local_near, __webpage_bind
dtx 
dtx  .segment __webpage_bind
dtx _webpage_bind: ; (leaf function) void webpage_bind(unsigned char, code unsigned char *)
dtx  ; parameter 'pd' in 'RW45' assigned to 'B1_RW89'
dtx  ; parameter 'sock' in 'R7'
dco @18:0 u:2  mov AR8,R4
dco @18:2 u:2  mov AR9,R5
dhl }
dhl 
dhl 
dhl 
dhl /**********************************************************************************
dhl * webpage_bind(uchar socket, code unsigned char *pd)
dhl * This will bind a webpage to a given socket, after a HTTP-Request was received
dhl * for this page.
dhl **********************************************************************************/
dhl void webpage_bind(uchar sock, code unsigned char *pd){
dco @18:4 u:2  mov R5,AR7
dco @18:6 u:1  clr A
dco @18:7 u:1  mov R4,A
dco @18:8 u:1  mov R6,A
dco @18:9 u:2  mov R7,#6
dco @18:b u:3  lcall __mul_i2
dco @18:e u:2  mov R2,#((_http_info)>>8)&255
dco @18:10 u:2  mov R3,#(_http_info)&255
dco @18:12 u:1  mov A,R3
dco @18:13 u:1  add A,R7
dco @18:14 u:1  mov R1,A
dco @18:15 u:1  mov A,R2
dco @18:16 u:1  addc A,R6
dco @18:17 u:1  mov R0,A
dtx  ; variable 'pinfo' assigned to register 'RW01'
dhl         xdata HTTP_INFO *pinfo;
dhl         pinfo=&http_info[sock]; // Pointer to HTTP_INFO for the current socket
dhl 
dhl         pinfo->weblen=*((code uint*)pd);
dco @18:18 u:2  mov R6,AR8
dco @18:1a u:2  mov R7,AR9
dco @18:1c u:2  mov DPH,R6
dco @18:1e u:2  mov DPL,R7
dco @18:20 u:3  lcall __ldc_dptr_r23
dco @18:23 u:2  mov A,#4
dco @18:25 u:1  add A,R1
dco @18:26 u:1  mov R7,A
dco @18:27 u:1  clr A
dco @18:28 u:1  addc A,R0
dco @18:29 u:1  mov R6,A
dco @18:2a u:2  mov DPH,R6
dco @18:2c u:2  mov DPL,R7
dco @18:2e u:3  lcall __st_dptr_r23
dhl         pd+=2;
dco @18:31 u:2  mov R6,AR8
dco @18:33 u:2  mov R7,AR9
dco @18:35 u:2  mov A,#2
dco @18:37 u:1  add A,R7
dco @18:38 u:1  mov R7,A
dco @18:39 u:1  clr A
dco @18:3a u:1  addc A,R6
dco @18:3b u:1  mov R6,A
dtx  ; variable 'pd' assigned to register 'RW67'
dhl         pinfo->dyna_flag=*pd++;
dco @18:3c u:2  mov R4,AR6
dco @18:3e u:2  mov R5,AR7
dco @18:40 u:2  mov A,#1
dco @18:42 u:1  add A,R5
dco @18:43 u:1  mov R7,A
dco @18:44 u:1  clr A
dco @18:45 u:1  addc A,R4
dco @18:46 u:1  mov R6,A
dtx  ; variable 'pd' assigned to register 'B1_RW89'
dco @18:47 u:2  mov AR8,R6
dco @18:49 u:2  mov AR9,R7
dco @18:4b u:3  mov DPH,AR4
dco @18:4e u:3  mov DPL,AR5
dco @18:51 u:1  clr A
dco @18:52 u:1  movc A,@A+DPTR
dco @18:53 u:1  mov R3,A
dco @18:54 u:2  mov A,#1
dco @18:56 u:1  add A,R1
dco @18:57 u:1  mov R7,A
dco @18:58 u:1  clr A
dco @18:59 u:1  addc A,R0
dco @18:5a u:1  mov R6,A
dco @18:5b u:3  mov DPH,AR6
dco @18:5e u:3  mov DPL,AR7
dco @18:61 u:1  mov A,R3
dco @18:62 u:1  movx @DPTR,A
dhl         pinfo->pweb=pd;
dco @18:63 u:2  mov A,#2
dco @18:65 u:1  add A,R1
dco @18:66 u:1  mov R3,A
dco @18:67 u:1  clr A
dco @18:68 u:1  addc A,R0
dco @18:69 u:1  mov R2,A
dco @18:6a u:2  mov R6,AR8
dco @18:6c u:2  mov R7,AR9
dco @18:6e u:2  mov DPH,R2
dco @18:70 u:2  mov DPL,R3
dco @18:72 u:3  lcall __st_dptr_r67
dco @18:75 u:1  ret
dtx ; end of function webpage_bind
dtx ; used: R01234567 BR01------ DPTR ACC PSW B
dtx 
dtx  .segment bss, sclass xram, notext
dtx  .export _web_args ; xdata unsigned char *xdata web_args
dtx _web_args: ; xdata unsigned char *xdata web_args
dco @19:0 u:2  .ds.b 2
dtx  .export _http_info ; xdata HTTP_INFO http_info[2]
dtx _http_info: ; xdata HTTP_INFO http_info[2]
dco @19:2 u:c  .ds.b 12
dtx  .import _poll_net ; unsigned int poll_net(void)
dtx  .import _close_socket_tcp ; unsigned int close_socket_tcp(unsigned char)
dtx  .import _notready_socket_tcp ; unsigned int notready_socket_tcp(unsigned char, unsigned char)
dtx  .import _send_socket_tcp ; unsigned int send_socket_tcp(unsigned char, xdata unsigned char *, unsigne
dtx  .import _allocate_tx_buf ; xdata unsigned char *allocate_tx_buf(void)
dtx  .import _rcv_len ; xdata unsigned int rcv_len
dtx  .import _rcv_buf ; xdata unsigned char rcv_buf[1400]
dtx  .import _uc_socket ; xdata UC_SOCKET uc_socket[2]
dtx  .end
dhl }
dhl 
dhl // EOF
def:_html_notfound @0:0
def:_webpage_bind @18:0
def:_http_info @19:2
def:_webpage_name @f:0
def:_gendyn_html @4:0
def:_web_args @19:0
def:_csock @1:0
def:_url_getarg_str @15:0
def:_url_getarg_no @12:0
def:_poll_webserver @c:0
objectend
