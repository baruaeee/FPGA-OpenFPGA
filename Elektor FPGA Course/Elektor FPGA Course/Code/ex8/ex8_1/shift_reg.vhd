-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 5.1 (Build Build 176 10/26/2005)
-- Created on Wed Feb 08 14:42:21 2006

LIBRARY ieee;
USE ieee.std_logic_1164.all;


--  Entity Declaration

ENTITY shift_reg IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		clk : IN STD_LOGIC;
		ce : IN STD_LOGIC;
		shift_in : IN STD_LOGIC;
		SHIFT_OUT : OUT STD_LOGIC_VECTOR(6 downto 0)
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END shift_reg;


--  Architecture Body

ARCHITECTURE shift_reg_architecture OF shift_reg IS

SIGNAL TEMP_OUT : STD_LOGIC_VECTOR (6 downto 0);
	
BEGIN

shift_proc : PROCESS (clk)
  BEGIN
    IF (clk='1' and clk'event and ce='1') THEN	-- if there is a positive edge on clk then
      TEMP_OUT (6) <= TEMP_OUT(5);		-- the new value for output nr 6 will be the same value as 
								-- output nr 5 had BEFORE the clk-pulse. 
      TEMP_OUT (5) <= TEMP_OUT(4);
      TEMP_OUT (4) <= TEMP_OUT(3);
      TEMP_OUT (3) <= TEMP_OUT(2);
      TEMP_OUT (2) <= TEMP_OUT(1);
      TEMP_OUT (1) <= TEMP_OUT(0);
      TEMP_OUT (0) <= shift_in;
    END IF;						-- end of if positive edge on clk
  END PROCESS; 					-- end of process "shift_proc"
  
  SHIFT_OUT <= TEMP_OUT;
END shift_reg_architecture;

-- Remarks :
-- You can change the order of lines 52 to 60 to any arbitrary order. This will have no effects on
-- the desin.
-- Remember that the new values for the outputs are updates AFTER the evauation of the process!

-- We use an internal signal (TEMP_OUT) so we can drive this signal, as well as using it as input.
-- At the end, we connect this signal to our signal-port. It is not possible to use an out-port 
-- for feedback! 