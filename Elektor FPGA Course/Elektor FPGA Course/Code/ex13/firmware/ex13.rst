                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.5.0 #1020 (May  8 2005)
                              4 ; This file generated Tue Jul 18 00:13:25 2006
                              5 ;--------------------------------------------------------
                              6 	.module ex13
                              7 	.optsdcc -mmcs51 --model-small
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _TF2
                             14 	.globl _EXF2
                             15 	.globl _RCLK
                             16 	.globl _TCLK
                             17 	.globl _EXEN2
                             18 	.globl _TR2
                             19 	.globl _C_T2
                             20 	.globl _CP_RL2
                             21 	.globl _T2CON_7
                             22 	.globl _T2CON_6
                             23 	.globl _T2CON_5
                             24 	.globl _T2CON_4
                             25 	.globl _T2CON_3
                             26 	.globl _T2CON_2
                             27 	.globl _T2CON_1
                             28 	.globl _T2CON_0
                             29 	.globl _ET2
                             30 	.globl _CY
                             31 	.globl _AC
                             32 	.globl _F0
                             33 	.globl _RS1
                             34 	.globl _RS0
                             35 	.globl _OV
                             36 	.globl _F1
                             37 	.globl _P
                             38 	.globl _PS
                             39 	.globl _PT1
                             40 	.globl _PX1
                             41 	.globl _PT0
                             42 	.globl _PX0
                             43 	.globl _RD
                             44 	.globl _WR
                             45 	.globl _T1
                             46 	.globl _T0
                             47 	.globl _INT1
                             48 	.globl _INT0
                             49 	.globl _TXD
                             50 	.globl _RXD
                             51 	.globl _P3_7
                             52 	.globl _P3_6
                             53 	.globl _P3_5
                             54 	.globl _P3_4
                             55 	.globl _P3_3
                             56 	.globl _P3_2
                             57 	.globl _P3_1
                             58 	.globl _P3_0
                             59 	.globl _EA
                             60 	.globl _ES
                             61 	.globl _ET1
                             62 	.globl _EX1
                             63 	.globl _ET0
                             64 	.globl _EX0
                             65 	.globl _P2_7
                             66 	.globl _P2_6
                             67 	.globl _P2_5
                             68 	.globl _P2_4
                             69 	.globl _P2_3
                             70 	.globl _P2_2
                             71 	.globl _P2_1
                             72 	.globl _P2_0
                             73 	.globl _SM0
                             74 	.globl _SM1
                             75 	.globl _SM2
                             76 	.globl _REN
                             77 	.globl _TB8
                             78 	.globl _RB8
                             79 	.globl _TI
                             80 	.globl _RI
                             81 	.globl _P1_7
                             82 	.globl _P1_6
                             83 	.globl _P1_5
                             84 	.globl _P1_4
                             85 	.globl _P1_3
                             86 	.globl _P1_2
                             87 	.globl _P1_1
                             88 	.globl _P1_0
                             89 	.globl _TF1
                             90 	.globl _TR1
                             91 	.globl _TF0
                             92 	.globl _TR0
                             93 	.globl _IE1
                             94 	.globl _IT1
                             95 	.globl _IE0
                             96 	.globl _IT0
                             97 	.globl _P0_7
                             98 	.globl _P0_6
                             99 	.globl _P0_5
                            100 	.globl _P0_4
                            101 	.globl _P0_3
                            102 	.globl _P0_2
                            103 	.globl _P0_1
                            104 	.globl _P0_0
                            105 	.globl _TH2
                            106 	.globl _TL2
                            107 	.globl _RCAP2H
                            108 	.globl _RCAP2L
                            109 	.globl _T2CON
                            110 	.globl _B
                            111 	.globl _ACC
                            112 	.globl _PSW
                            113 	.globl _IP
                            114 	.globl _P3
                            115 	.globl _IE
                            116 	.globl _P2
                            117 	.globl _SBUF
                            118 	.globl _SCON
                            119 	.globl _P1
                            120 	.globl _TH1
                            121 	.globl _TH0
                            122 	.globl _TL1
                            123 	.globl _TL0
                            124 	.globl _TMOD
                            125 	.globl _TCON
                            126 	.globl _PCON
                            127 	.globl _DPH
                            128 	.globl _DPL
                            129 	.globl _SP
                            130 	.globl _P0
                            131 ;--------------------------------------------------------
                            132 ; special function registers
                            133 ;--------------------------------------------------------
                            134 	.area RSEG    (DATA)
                    0080    135 _P0	=	0x0080
                    0081    136 _SP	=	0x0081
                    0082    137 _DPL	=	0x0082
                    0083    138 _DPH	=	0x0083
                    0087    139 _PCON	=	0x0087
                    0088    140 _TCON	=	0x0088
                    0089    141 _TMOD	=	0x0089
                    008A    142 _TL0	=	0x008a
                    008B    143 _TL1	=	0x008b
                    008C    144 _TH0	=	0x008c
                    008D    145 _TH1	=	0x008d
                    0090    146 _P1	=	0x0090
                    0098    147 _SCON	=	0x0098
                    0099    148 _SBUF	=	0x0099
                    00A0    149 _P2	=	0x00a0
                    00A8    150 _IE	=	0x00a8
                    00B0    151 _P3	=	0x00b0
                    00B8    152 _IP	=	0x00b8
                    00D0    153 _PSW	=	0x00d0
                    00E0    154 _ACC	=	0x00e0
                    00F0    155 _B	=	0x00f0
                    00C8    156 _T2CON	=	0x00c8
                    00CA    157 _RCAP2L	=	0x00ca
                    00CB    158 _RCAP2H	=	0x00cb
                    00CC    159 _TL2	=	0x00cc
                    00CD    160 _TH2	=	0x00cd
                            161 ;--------------------------------------------------------
                            162 ; special function bits 
                            163 ;--------------------------------------------------------
                            164 	.area RSEG    (DATA)
                    0080    165 _P0_0	=	0x0080
                    0081    166 _P0_1	=	0x0081
                    0082    167 _P0_2	=	0x0082
                    0083    168 _P0_3	=	0x0083
                    0084    169 _P0_4	=	0x0084
                    0085    170 _P0_5	=	0x0085
                    0086    171 _P0_6	=	0x0086
                    0087    172 _P0_7	=	0x0087
                    0088    173 _IT0	=	0x0088
                    0089    174 _IE0	=	0x0089
                    008A    175 _IT1	=	0x008a
                    008B    176 _IE1	=	0x008b
                    008C    177 _TR0	=	0x008c
                    008D    178 _TF0	=	0x008d
                    008E    179 _TR1	=	0x008e
                    008F    180 _TF1	=	0x008f
                    0090    181 _P1_0	=	0x0090
                    0091    182 _P1_1	=	0x0091
                    0092    183 _P1_2	=	0x0092
                    0093    184 _P1_3	=	0x0093
                    0094    185 _P1_4	=	0x0094
                    0095    186 _P1_5	=	0x0095
                    0096    187 _P1_6	=	0x0096
                    0097    188 _P1_7	=	0x0097
                    0098    189 _RI	=	0x0098
                    0099    190 _TI	=	0x0099
                    009A    191 _RB8	=	0x009a
                    009B    192 _TB8	=	0x009b
                    009C    193 _REN	=	0x009c
                    009D    194 _SM2	=	0x009d
                    009E    195 _SM1	=	0x009e
                    009F    196 _SM0	=	0x009f
                    00A0    197 _P2_0	=	0x00a0
                    00A1    198 _P2_1	=	0x00a1
                    00A2    199 _P2_2	=	0x00a2
                    00A3    200 _P2_3	=	0x00a3
                    00A4    201 _P2_4	=	0x00a4
                    00A5    202 _P2_5	=	0x00a5
                    00A6    203 _P2_6	=	0x00a6
                    00A7    204 _P2_7	=	0x00a7
                    00A8    205 _EX0	=	0x00a8
                    00A9    206 _ET0	=	0x00a9
                    00AA    207 _EX1	=	0x00aa
                    00AB    208 _ET1	=	0x00ab
                    00AC    209 _ES	=	0x00ac
                    00AF    210 _EA	=	0x00af
                    00B0    211 _P3_0	=	0x00b0
                    00B1    212 _P3_1	=	0x00b1
                    00B2    213 _P3_2	=	0x00b2
                    00B3    214 _P3_3	=	0x00b3
                    00B4    215 _P3_4	=	0x00b4
                    00B5    216 _P3_5	=	0x00b5
                    00B6    217 _P3_6	=	0x00b6
                    00B7    218 _P3_7	=	0x00b7
                    00B0    219 _RXD	=	0x00b0
                    00B1    220 _TXD	=	0x00b1
                    00B2    221 _INT0	=	0x00b2
                    00B3    222 _INT1	=	0x00b3
                    00B4    223 _T0	=	0x00b4
                    00B5    224 _T1	=	0x00b5
                    00B6    225 _WR	=	0x00b6
                    00B7    226 _RD	=	0x00b7
                    00B8    227 _PX0	=	0x00b8
                    00B9    228 _PT0	=	0x00b9
                    00BA    229 _PX1	=	0x00ba
                    00BB    230 _PT1	=	0x00bb
                    00BC    231 _PS	=	0x00bc
                    00D0    232 _P	=	0x00d0
                    00D1    233 _F1	=	0x00d1
                    00D2    234 _OV	=	0x00d2
                    00D3    235 _RS0	=	0x00d3
                    00D4    236 _RS1	=	0x00d4
                    00D5    237 _F0	=	0x00d5
                    00D6    238 _AC	=	0x00d6
                    00D7    239 _CY	=	0x00d7
                    00AD    240 _ET2	=	0x00ad
                    00C8    241 _T2CON_0	=	0x00c8
                    00C9    242 _T2CON_1	=	0x00c9
                    00CA    243 _T2CON_2	=	0x00ca
                    00CB    244 _T2CON_3	=	0x00cb
                    00CC    245 _T2CON_4	=	0x00cc
                    00CD    246 _T2CON_5	=	0x00cd
                    00CE    247 _T2CON_6	=	0x00ce
                    00CF    248 _T2CON_7	=	0x00cf
                    00C8    249 _CP_RL2	=	0x00c8
                    00C9    250 _C_T2	=	0x00c9
                    00CA    251 _TR2	=	0x00ca
                    00CB    252 _EXEN2	=	0x00cb
                    00CC    253 _TCLK	=	0x00cc
                    00CD    254 _RCLK	=	0x00cd
                    00CE    255 _EXF2	=	0x00ce
                    00CF    256 _TF2	=	0x00cf
                            257 ;--------------------------------------------------------
                            258 ; overlayable register banks 
                            259 ;--------------------------------------------------------
                            260 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     261 	.ds 8
                            262 ;--------------------------------------------------------
                            263 ; internal ram data
                            264 ;--------------------------------------------------------
                            265 	.area DSEG    (DATA)
                            266 ;--------------------------------------------------------
                            267 ; overlayable items in internal ram 
                            268 ;--------------------------------------------------------
                            269 	.area	OSEG    (OVR,DATA)
   0008                     270 _main_p2_1_1::
   0008                     271 	.ds 2
                            272 ;--------------------------------------------------------
                            273 ; Stack segment in internal ram 
                            274 ;--------------------------------------------------------
                            275 	.area	SSEG	(DATA)
   000A                     276 __start__stack:
   000A                     277 	.ds	1
                            278 
                            279 ;--------------------------------------------------------
                            280 ; indirectly addressable internal ram data
                            281 ;--------------------------------------------------------
                            282 	.area ISEG    (DATA)
                            283 ;--------------------------------------------------------
                            284 ; bit data
                            285 ;--------------------------------------------------------
                            286 	.area BSEG    (BIT)
                            287 ;--------------------------------------------------------
                            288 ; paged external ram data
                            289 ;--------------------------------------------------------
                            290 	.area PSEG    (PAG,XDATA)
                            291 ;--------------------------------------------------------
                            292 ; external ram data
                            293 ;--------------------------------------------------------
                            294 	.area XSEG    (XDATA)
   0000                     295 _main_buffer_1_1::
   0000                     296 	.ds 128
                            297 ;--------------------------------------------------------
                            298 ; external initialized ram data
                            299 ;--------------------------------------------------------
                            300 	.area XISEG   (XDATA)
                            301 	.area CSEG    (CODE)
                            302 	.area GSINIT0 (CODE)
                            303 	.area GSINIT1 (CODE)
                            304 	.area GSINIT2 (CODE)
                            305 	.area GSINIT3 (CODE)
                            306 	.area GSINIT4 (CODE)
                            307 	.area GSINIT5 (CODE)
                            308 ;--------------------------------------------------------
                            309 ; interrupt vector 
                            310 ;--------------------------------------------------------
                            311 	.area CSEG    (CODE)
   0000                     312 __interrupt_vect:
   0000 02 00 81            313 	ljmp	__sdcc_gsinit_startup
                            314 ;--------------------------------------------------------
                            315 ; global & static initialisations
                            316 ;--------------------------------------------------------
                            317 	.area CSEG    (CODE)
                            318 	.area GSINIT  (CODE)
                            319 	.area GSFINAL (CODE)
                            320 	.area GSINIT  (CODE)
                            321 	.globl __sdcc_gsinit_startup
                            322 	.globl __sdcc_program_startup
                            323 	.globl __start__stack
                            324 	.globl __mcs51_genXINIT
                            325 	.globl __mcs51_genXRAMCLEAR
                            326 	.globl __mcs51_genRAMCLEAR
                            327 	.area GSFINAL (CODE)
   00DA 02 00 03            328 	ljmp	__sdcc_program_startup
                            329 ;--------------------------------------------------------
                            330 ; Home
                            331 ;--------------------------------------------------------
                            332 	.area HOME    (CODE)
                            333 	.area CSEG    (CODE)
                            334 ;--------------------------------------------------------
                            335 ; code
                            336 ;--------------------------------------------------------
                            337 	.area CSEG    (CODE)
   0003                     338 __sdcc_program_startup:
   0003 12 00 08            339 	lcall	_main
                            340 ;	return from main will lock up
   0006 80 FE               341 	sjmp .
                            342 ;------------------------------------------------------------
                            343 ;Allocation info for local variables in function 'main'
                            344 ;------------------------------------------------------------
                            345 ;count                     Allocated with name '_main_count_1_1'
                            346 ;buffer                    Allocated with name '_main_buffer_1_1'
                            347 ;p                         Allocated to registers r3 r4 
                            348 ;p2                        Allocated with name '_main_p2_1_1'
                            349 ;LED                       Allocated to registers r2 
                            350 ;------------------------------------------------------------
                            351 ;ex13.c:12: void main (void)
                            352 ;	-----------------------------------------
                            353 ;	 function main
                            354 ;	-----------------------------------------
   0008                     355 _main:
                    0002    356 	ar2 = 0x02
                    0003    357 	ar3 = 0x03
                    0004    358 	ar4 = 0x04
                    0005    359 	ar5 = 0x05
                    0006    360 	ar6 = 0x06
                    0007    361 	ar7 = 0x07
                    0000    362 	ar0 = 0x00
                    0001    363 	ar1 = 0x01
                            364 ;ex13.c:20: LED=0x01;
                            365 ;     genAssign
   0008 7A 01               366 	mov	r2,#0x01
                            367 ;ex13.c:21: p = (__xdata unsigned char*) (0x8000);
                            368 ;     genAssign
   000A 7B 00               369 	mov	r3,#0x00
   000C 7C 80               370 	mov	r4,#0x80
                            371 ;ex13.c:22: p2 = (__xdata unsigned char*) (0x0500);
                            372 ;     genAssign
   000E 75 08 00            373 	mov	_main_p2_1_1,#0x00
   0011 75 09 05            374 	mov	(_main_p2_1_1 + 1),#0x05
                            375 ;ex13.c:23: for (count=0;count <sizeof (buffer);count++)
                            376 ;     genAssign
   0014 7F 00               377 	mov	r7,#0x00
   0016 78 00               378 	mov	r0,#0x00
   0018 79 00               379 	mov	r1,#0x00
   001A 7D 00               380 	mov	r5,#0x00
   001C                     381 00106$:
                            382 ;     genCmpLt
                            383 ;     genCmp
   001C C3                  384 	clr	c
   001D EF                  385 	mov	a,r7
   001E 94 80               386 	subb	a,#0x80
   0020 E8                  387 	mov	a,r0
   0021 94 00               388 	subb	a,#0x00
   0023 E9                  389 	mov	a,r1
   0024 94 00               390 	subb	a,#0x00
   0026 ED                  391 	mov	a,r5
   0027 94 00               392 	subb	a,#0x00
                            393 ;     genIfxJump
                            394 ;	Peephole 108	removed ljmp by inverse jump logic
   0029 50 1D               395 	jnc	00117$
   002B                     396 00121$:
                            397 ;ex13.c:24: buffer[count]=(unsigned char) (count);
                            398 ;     genPlus
                            399 ;	Peephole 236.g	used r7 instead of ar7
   002B EF                  400 	mov	a,r7
   002C 24 00               401 	add	a,#_main_buffer_1_1
   002E F5 82               402 	mov	dpl,a
                            403 ;	Peephole 236.g	used r0 instead of ar0
   0030 E8                  404 	mov	a,r0
   0031 34 00               405 	addc	a,#(_main_buffer_1_1 >> 8)
   0033 F5 83               406 	mov	dph,a
                            407 ;     genCast
   0035 8F 06               408 	mov	ar6,r7
                            409 ;     genPointerSet
                            410 ;     genFarPointerSet
   0037 EE                  411 	mov	a,r6
   0038 F0                  412 	movx	@dptr,a
                            413 ;ex13.c:23: for (count=0;count <sizeof (buffer);count++)
                            414 ;     genPlus
                            415 ;     genPlusIncr
                            416 ;	tail increment optimized
   0039 0F                  417 	inc	r7
   003A BF 00 DF            418 	cjne	r7,#0x00,00106$
   003D 08                  419 	inc	r0
   003E B8 00 DB            420 	cjne	r0,#0x00,00106$
   0041 09                  421 	inc	r1
   0042 B9 00 D7            422 	cjne	r1,#0x00,00106$
   0045 0D                  423 	inc	r5
                            424 ;ex13.c:26: for (count=0;count<200000;count++)
                            425 ;	Peephole 112.b	changed ljmp to sjmp
   0046 80 D4               426 	sjmp	00106$
   0048                     427 00117$:
                            428 ;     genAssign
   0048 7D 40               429 	mov	r5,#0x40
   004A 7E 0D               430 	mov	r6,#0x0D
   004C 7F 03               431 	mov	r7,#0x03
   004E 78 00               432 	mov	r0,#0x00
   0050                     433 00112$:
                            434 ;ex13.c:29: *p = LED;
                            435 ;     genPointerSet
                            436 ;     genFarPointerSet
   0050 8B 82               437 	mov	dpl,r3
   0052 8C 83               438 	mov	dph,r4
   0054 EA                  439 	mov	a,r2
   0055 F0                  440 	movx	@dptr,a
                            441 ;ex13.c:30: *p2 = LED;
                            442 ;     genPointerSet
                            443 ;     genFarPointerSet
   0056 85 08 82            444 	mov	dpl,_main_p2_1_1
   0059 85 09 83            445 	mov	dph,(_main_p2_1_1 + 1)
   005C EA                  446 	mov	a,r2
   005D F0                  447 	movx	@dptr,a
                            448 ;     genDjnz
                            449 ;     genMinus
                            450 ;     genMinusDec
   005E 1D                  451 	dec	r5
   005F BD FF 09            452 	cjne	r5,#0xff,00122$
   0062 1E                  453 	dec	r6
   0063 BE FF 05            454 	cjne	r6,#0xff,00122$
   0066 1F                  455 	dec	r7
   0067 BF FF 01            456 	cjne	r7,#0xff,00122$
   006A 18                  457 	dec	r0
   006B                     458 00122$:
                            459 ;ex13.c:26: for (count=0;count<200000;count++)
                            460 ;     genIfx
   006B ED                  461 	mov	a,r5
   006C 4E                  462 	orl	a,r6
   006D 4F                  463 	orl	a,r7
   006E 48                  464 	orl	a,r0
                            465 ;     genIfxJump
                            466 ;	Peephole 109	removed ljmp by inverse jump logic
   006F 70 DF               467 	jnz	00112$
   0071                     468 00123$:
                            469 ;ex13.c:32: LED = LED <<1;
                            470 ;     genLeftShift
                            471 ;     genLeftShiftLiteral
                            472 ;     genlshOne
                            473 ;	Peephole 254	optimized left shift
   0071 EA                  474 	mov	a,r2
   0072 2A                  475 	add	a,r2
                            476 ;ex13.c:33: if (LED==0) LED=1;
                            477 ;     genCmpEq
                            478 ;	Peephole 115.b	jump optimization
   0073 FA                  479 	mov	r2,a
   0074 60 02               480 	jz	00125$
   0076                     481 00124$:
                            482 ;	Peephole 112.b	changed ljmp to sjmp
   0076 80 D0               483 	sjmp	00117$
   0078                     484 00125$:
                            485 ;     genAssign
   0078 7A 01               486 	mov	r2,#0x01
                            487 ;	Peephole 112.b	changed ljmp to sjmp
   007A 80 CC               488 	sjmp	00117$
   007C                     489 00113$:
   007C 22                  490 	ret
                            491 	.area CSEG    (CODE)
                            492 	.area XINIT   (CODE)
