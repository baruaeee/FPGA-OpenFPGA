-- WARNING: Do NOT edit the input and output ports in this file in a text
-- editor if you plan to continue editing the block that represents it in
-- the Block Editor! File corruption is VERY likely to occur.

-- Copyright (C) 1991-2006 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.


-- Generated by Quartus II Version 6.0 (Build Build 202 06/20/2006)
-- Created on Thu Jul 13 02:00:33 2006

LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE IEEE.NUMERIC_STD.ALL;


--  Entity Declaration

ENTITY wish_output IS
	-- {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	PORT
	(
		CLK : IN STD_LOGIC;
		RESET : IN STD_LOGIC;
		WE_IN : IN STD_LOGIC;
		STB_IN : IN STD_LOGIC;
		CYC_IN : IN STD_LOGIC;
		DAT_IN : IN STD_LOGIC_VECTOR(7 downto 0);
		ADR_IN : IN STD_LOGIC_VECTOR(15 downto 0);
		DAT_O : OUT STD_LOGIC_VECTOR(7 downto 0);
		ACK_O : OUT STD_LOGIC;
		OUTPUT : OUT STD_LOGIC_VECTOR(7 downto 0)
	);
	-- {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!
	
END wish_output;


--  Architecture Body

ARCHITECTURE wish_output_architecture OF wish_output IS


SIGNAL sel,ACK_OK   : STD_LOGIC;
SIGNAL COUNT : INTEGER RANGE 0 TO 255;


BEGIN

  sel<= '1'when ADR_IN=x"8000" else '0';

  PROCESS (CLK,RESET)
  BEGIN
    if (RESET='1') then
      OUTPUT <="11111111";
    else
      if (CLK'event and CLK='1') then
        if (sel='1' and WE_IN='1' and STB_IN='1' and CYC_IN='1') then OUTPUT<=DAT_IN; end if;        
      end if;
    end if;
  END PROCESS;

  PROCESS (CLK,RESET)
  BEGIN
    IF (RESET='1') THEN
      COUNT<= 0;
      ACK_OK<='0';
    ELSE
      IF (CLK'event and CLK='1') THEN
        IF (sel='1') THEN 
          COUNT<=COUNT+1;
        ELSE
          COUNT<=0;
        END IF;  
  
        IF (COUNT=200) THEN
          ACK_OK <='1';
        ELSE
          IF (STB_IN='0' OR CYC_IN='0') THEN 
            ACK_OK<='0';
          END IF;
        END IF; 
  
      END IF;-- posedge CLK
    END IF; -- RESET
  
  END PROCESS;


  ACK_O <= (STB_IN and CYC_IN and ACK_OK and sel) or (STB_IN and CYC_IN and (NOT sel));
  DAT_O <= "00000000";

END wish_output_architecture;
